// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type Header struct{ capnp.Struct }

// Header_TypeID is the unique identifier for the type Header.
const Header_TypeID = 0x8ededcb57f98aaf0

func NewHeader(s *capnp.Segment) (Header, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Header{st}, err
}

func NewRootHeader(s *capnp.Segment) (Header, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Header{st}, err
}

func ReadRootHeader(msg *capnp.Message) (Header, error) {
	root, err := msg.RootPtr()
	return Header{root.Struct()}, err
}

func (s Header) String() string {
	str, _ := text.Marshal(0x8ededcb57f98aaf0, s.Struct)
	return str
}

func (s Header) Version() uint8 {
	return s.Struct.Uint8(0)
}

func (s Header) SetVersion(v uint8) {
	s.Struct.SetUint8(0, v)
}

func (s Header) Time() uint32 {
	return s.Struct.Uint32(4)
}

func (s Header) SetTime(v uint32) {
	s.Struct.SetUint32(4, v)
}

func (s Header) PrevBlockHash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Header) HasPrevBlockHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Header) SetPrevBlockHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Header) StateRoot() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Header) HasStateRoot() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Header) SetStateRoot(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Header) SortitionSeed() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s Header) HasSortitionSeed() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Header) SetSortitionSeed(v []byte) error {
	return s.Struct.SetData(2, v)
}

func (s Header) ProposerAddress() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Header) HasProposerAddress() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Header) ProposerAddressBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Header) SetProposerAddress(v string) error {
	return s.Struct.SetText(3, v)
}

// Header_List is a list of Header.
type Header_List struct{ capnp.List }

// NewHeader creates a new list of Header.
func NewHeader_List(s *capnp.Segment, sz int32) (Header_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return Header_List{l}, err
}

func (s Header_List) At(i int) Header { return Header{s.List.Struct(i)} }

func (s Header_List) Set(i int, v Header) error { return s.List.SetStruct(i, v.Struct) }

func (s Header_List) String() string {
	str, _ := text.MarshalList(0x8ededcb57f98aaf0, s.List)
	return str
}

// Header_Promise is a wrapper for a Header promised by a client call.
type Header_Promise struct{ *capnp.Pipeline }

func (p Header_Promise) Struct() (Header, error) {
	s, err := p.Pipeline.Struct()
	return Header{s}, err
}

type Certificate struct{ capnp.Struct }

// Certificate_TypeID is the unique identifier for the type Certificate.
const Certificate_TypeID = 0xf94646af9560150b

func NewCertificate(s *capnp.Segment) (Certificate, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Certificate{st}, err
}

func NewRootCertificate(s *capnp.Segment) (Certificate, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Certificate{st}, err
}

func ReadRootCertificate(msg *capnp.Message) (Certificate, error) {
	root, err := msg.RootPtr()
	return Certificate{root.Struct()}, err
}

func (s Certificate) String() string {
	str, _ := text.Marshal(0xf94646af9560150b, s.Struct)
	return str
}

func (s Certificate) Round() int16 {
	return int16(s.Struct.Uint16(0))
}

func (s Certificate) SetRound(v int16) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Certificate) Committers() (capnp.Int32List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.Int32List{List: p.List()}, err
}

func (s Certificate) HasCommitters() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Certificate) SetCommitters(v capnp.Int32List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewCommitters sets the committers field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s Certificate) NewCommitters(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Certificate) Absentees() (capnp.Int32List, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.Int32List{List: p.List()}, err
}

func (s Certificate) HasAbsentees() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Certificate) SetAbsentees(v capnp.Int32List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewAbsentees sets the absentees field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s Certificate) NewAbsentees(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Certificate) Signature() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s Certificate) HasSignature() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Certificate) SetSignature(v []byte) error {
	return s.Struct.SetData(2, v)
}

// Certificate_List is a list of Certificate.
type Certificate_List struct{ capnp.List }

// NewCertificate creates a new list of Certificate.
func NewCertificate_List(s *capnp.Segment, sz int32) (Certificate_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Certificate_List{l}, err
}

func (s Certificate_List) At(i int) Certificate { return Certificate{s.List.Struct(i)} }

func (s Certificate_List) Set(i int, v Certificate) error { return s.List.SetStruct(i, v.Struct) }

func (s Certificate_List) String() string {
	str, _ := text.MarshalList(0xf94646af9560150b, s.List)
	return str
}

// Certificate_Promise is a wrapper for a Certificate promised by a client call.
type Certificate_Promise struct{ *capnp.Pipeline }

func (p Certificate_Promise) Struct() (Certificate, error) {
	s, err := p.Pipeline.Struct()
	return Certificate{s}, err
}

type Block struct{ capnp.Struct }

// Block_TypeID is the unique identifier for the type Block.
const Block_TypeID = 0xb8f393fd6f7f0c44

func NewBlock(s *capnp.Segment) (Block, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Block{st}, err
}

func NewRootBlock(s *capnp.Segment) (Block, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Block{st}, err
}

func ReadRootBlock(msg *capnp.Message) (Block, error) {
	root, err := msg.RootPtr()
	return Block{root.Struct()}, err
}

func (s Block) String() string {
	str, _ := text.Marshal(0xb8f393fd6f7f0c44, s.Struct)
	return str
}

func (s Block) Header() (Header, error) {
	p, err := s.Struct.Ptr(0)
	return Header{Struct: p.Struct()}, err
}

func (s Block) HasHeader() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Block) SetHeader(v Header) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewHeader sets the header field to a newly
// allocated Header struct, preferring placement in s's segment.
func (s Block) NewHeader() (Header, error) {
	ss, err := NewHeader(s.Struct.Segment())
	if err != nil {
		return Header{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Block) PrevCert() (Certificate, error) {
	p, err := s.Struct.Ptr(1)
	return Certificate{Struct: p.Struct()}, err
}

func (s Block) HasPrevCert() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Block) SetPrevCert(v Certificate) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewPrevCert sets the prevCert field to a newly
// allocated Certificate struct, preferring placement in s's segment.
func (s Block) NewPrevCert() (Certificate, error) {
	ss, err := NewCertificate(s.Struct.Segment())
	if err != nil {
		return Certificate{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Block) Txs() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.DataList{List: p.List()}, err
}

func (s Block) HasTxs() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Block) SetTxs(v capnp.DataList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewTxs sets the txs field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s Block) NewTxs(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// Block_List is a list of Block.
type Block_List struct{ capnp.List }

// NewBlock creates a new list of Block.
func NewBlock_List(s *capnp.Segment, sz int32) (Block_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Block_List{l}, err
}

func (s Block_List) At(i int) Block { return Block{s.List.Struct(i)} }

func (s Block_List) Set(i int, v Block) error { return s.List.SetStruct(i, v.Struct) }

func (s Block_List) String() string {
	str, _ := text.MarshalList(0xb8f393fd6f7f0c44, s.List)
	return str
}

// Block_Promise is a wrapper for a Block promised by a client call.
type Block_Promise struct{ *capnp.Pipeline }

func (p Block_Promise) Struct() (Block, error) {
	s, err := p.Pipeline.Struct()
	return Block{s}, err
}

func (p Block_Promise) Header() Header_Promise {
	return Header_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p Block_Promise) PrevCert() Certificate_Promise {
	return Certificate_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type BlockchainInfoResult struct{ capnp.Struct }

// BlockchainInfoResult_TypeID is the unique identifier for the type BlockchainInfoResult.
const BlockchainInfoResult_TypeID = 0xae39f74773bfa089

func NewBlockchainInfoResult(s *capnp.Segment) (BlockchainInfoResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return BlockchainInfoResult{st}, err
}

func NewRootBlockchainInfoResult(s *capnp.Segment) (BlockchainInfoResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return BlockchainInfoResult{st}, err
}

func ReadRootBlockchainInfoResult(msg *capnp.Message) (BlockchainInfoResult, error) {
	root, err := msg.RootPtr()
	return BlockchainInfoResult{root.Struct()}, err
}

func (s BlockchainInfoResult) String() string {
	str, _ := text.Marshal(0xae39f74773bfa089, s.Struct)
	return str
}

func (s BlockchainInfoResult) LastBlockHeight() uint32 {
	return s.Struct.Uint32(0)
}

func (s BlockchainInfoResult) SetLastBlockHeight(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s BlockchainInfoResult) LastBlockHash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s BlockchainInfoResult) HasLastBlockHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s BlockchainInfoResult) SetLastBlockHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s BlockchainInfoResult) Committee() (Committee, error) {
	p, err := s.Struct.Ptr(1)
	return Committee{Struct: p.Struct()}, err
}

func (s BlockchainInfoResult) HasCommittee() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s BlockchainInfoResult) SetCommittee(v Committee) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewCommittee sets the committee field to a newly
// allocated Committee struct, preferring placement in s's segment.
func (s BlockchainInfoResult) NewCommittee() (Committee, error) {
	ss, err := NewCommittee(s.Struct.Segment())
	if err != nil {
		return Committee{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// BlockchainInfoResult_List is a list of BlockchainInfoResult.
type BlockchainInfoResult_List struct{ capnp.List }

// NewBlockchainInfoResult creates a new list of BlockchainInfoResult.
func NewBlockchainInfoResult_List(s *capnp.Segment, sz int32) (BlockchainInfoResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return BlockchainInfoResult_List{l}, err
}

func (s BlockchainInfoResult_List) At(i int) BlockchainInfoResult {
	return BlockchainInfoResult{s.List.Struct(i)}
}

func (s BlockchainInfoResult_List) Set(i int, v BlockchainInfoResult) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockchainInfoResult_List) String() string {
	str, _ := text.MarshalList(0xae39f74773bfa089, s.List)
	return str
}

// BlockchainInfoResult_Promise is a wrapper for a BlockchainInfoResult promised by a client call.
type BlockchainInfoResult_Promise struct{ *capnp.Pipeline }

func (p BlockchainInfoResult_Promise) Struct() (BlockchainInfoResult, error) {
	s, err := p.Pipeline.Struct()
	return BlockchainInfoResult{s}, err
}

func (p BlockchainInfoResult_Promise) Committee() Committee_Promise {
	return Committee_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type BlockResult struct{ capnp.Struct }

// BlockResult_TypeID is the unique identifier for the type BlockResult.
const BlockResult_TypeID = 0x83143f06598cf9e8

func NewBlockResult(s *capnp.Segment) (BlockResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return BlockResult{st}, err
}

func NewRootBlockResult(s *capnp.Segment) (BlockResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return BlockResult{st}, err
}

func ReadRootBlockResult(msg *capnp.Message) (BlockResult, error) {
	root, err := msg.RootPtr()
	return BlockResult{root.Struct()}, err
}

func (s BlockResult) String() string {
	str, _ := text.Marshal(0x83143f06598cf9e8, s.Struct)
	return str
}

func (s BlockResult) Height() uint32 {
	return s.Struct.Uint32(0)
}

func (s BlockResult) SetHeight(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s BlockResult) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s BlockResult) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s BlockResult) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s BlockResult) Block() (Block, error) {
	p, err := s.Struct.Ptr(1)
	return Block{Struct: p.Struct()}, err
}

func (s BlockResult) HasBlock() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s BlockResult) SetBlock(v Block) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewBlock sets the block field to a newly
// allocated Block struct, preferring placement in s's segment.
func (s BlockResult) NewBlock() (Block, error) {
	ss, err := NewBlock(s.Struct.Segment())
	if err != nil {
		return Block{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockResult) Data() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s BlockResult) HasData() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s BlockResult) SetData(v []byte) error {
	return s.Struct.SetData(2, v)
}

// BlockResult_List is a list of BlockResult.
type BlockResult_List struct{ capnp.List }

// NewBlockResult creates a new list of BlockResult.
func NewBlockResult_List(s *capnp.Segment, sz int32) (BlockResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return BlockResult_List{l}, err
}

func (s BlockResult_List) At(i int) BlockResult { return BlockResult{s.List.Struct(i)} }

func (s BlockResult_List) Set(i int, v BlockResult) error { return s.List.SetStruct(i, v.Struct) }

func (s BlockResult_List) String() string {
	str, _ := text.MarshalList(0x83143f06598cf9e8, s.List)
	return str
}

// BlockResult_Promise is a wrapper for a BlockResult promised by a client call.
type BlockResult_Promise struct{ *capnp.Pipeline }

func (p BlockResult_Promise) Struct() (BlockResult, error) {
	s, err := p.Pipeline.Struct()
	return BlockResult{s}, err
}

func (p BlockResult_Promise) Block() Block_Promise {
	return Block_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type TransactionResult struct{ capnp.Struct }

// TransactionResult_TypeID is the unique identifier for the type TransactionResult.
const TransactionResult_TypeID = 0xbd77371c14feb668

func NewTransactionResult(s *capnp.Segment) (TransactionResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return TransactionResult{st}, err
}

func NewRootTransactionResult(s *capnp.Segment) (TransactionResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return TransactionResult{st}, err
}

func ReadRootTransactionResult(msg *capnp.Message) (TransactionResult, error) {
	root, err := msg.RootPtr()
	return TransactionResult{root.Struct()}, err
}

func (s TransactionResult) String() string {
	str, _ := text.Marshal(0xbd77371c14feb668, s.Struct)
	return str
}

func (s TransactionResult) Id() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s TransactionResult) HasId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TransactionResult) SetId(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s TransactionResult) Data() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s TransactionResult) HasData() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s TransactionResult) SetData(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s TransactionResult) Transaction() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s TransactionResult) HasTransaction() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s TransactionResult) SetTransaction(v []byte) error {
	return s.Struct.SetData(2, v)
}

// TransactionResult_List is a list of TransactionResult.
type TransactionResult_List struct{ capnp.List }

// NewTransactionResult creates a new list of TransactionResult.
func NewTransactionResult_List(s *capnp.Segment, sz int32) (TransactionResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return TransactionResult_List{l}, err
}

func (s TransactionResult_List) At(i int) TransactionResult {
	return TransactionResult{s.List.Struct(i)}
}

func (s TransactionResult_List) Set(i int, v TransactionResult) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransactionResult_List) String() string {
	str, _ := text.MarshalList(0xbd77371c14feb668, s.List)
	return str
}

// TransactionResult_Promise is a wrapper for a TransactionResult promised by a client call.
type TransactionResult_Promise struct{ *capnp.Pipeline }

func (p TransactionResult_Promise) Struct() (TransactionResult, error) {
	s, err := p.Pipeline.Struct()
	return TransactionResult{s}, err
}

type AccountResult struct{ capnp.Struct }

// AccountResult_TypeID is the unique identifier for the type AccountResult.
const AccountResult_TypeID = 0xa3bd4ddc3e0a5017

func NewAccountResult(s *capnp.Segment) (AccountResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AccountResult{st}, err
}

func NewRootAccountResult(s *capnp.Segment) (AccountResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AccountResult{st}, err
}

func ReadRootAccountResult(msg *capnp.Message) (AccountResult, error) {
	root, err := msg.RootPtr()
	return AccountResult{root.Struct()}, err
}

func (s AccountResult) String() string {
	str, _ := text.Marshal(0xa3bd4ddc3e0a5017, s.Struct)
	return str
}

func (s AccountResult) Data() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s AccountResult) HasData() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AccountResult) SetData(v []byte) error {
	return s.Struct.SetData(0, v)
}

// AccountResult_List is a list of AccountResult.
type AccountResult_List struct{ capnp.List }

// NewAccountResult creates a new list of AccountResult.
func NewAccountResult_List(s *capnp.Segment, sz int32) (AccountResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AccountResult_List{l}, err
}

func (s AccountResult_List) At(i int) AccountResult { return AccountResult{s.List.Struct(i)} }

func (s AccountResult_List) Set(i int, v AccountResult) error { return s.List.SetStruct(i, v.Struct) }

func (s AccountResult_List) String() string {
	str, _ := text.MarshalList(0xa3bd4ddc3e0a5017, s.List)
	return str
}

// AccountResult_Promise is a wrapper for a AccountResult promised by a client call.
type AccountResult_Promise struct{ *capnp.Pipeline }

func (p AccountResult_Promise) Struct() (AccountResult, error) {
	s, err := p.Pipeline.Struct()
	return AccountResult{s}, err
}

type ValidatorResult struct{ capnp.Struct }

// ValidatorResult_TypeID is the unique identifier for the type ValidatorResult.
const ValidatorResult_TypeID = 0xec1c828dae8bffa3

func NewValidatorResult(s *capnp.Segment) (ValidatorResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ValidatorResult{st}, err
}

func NewRootValidatorResult(s *capnp.Segment) (ValidatorResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ValidatorResult{st}, err
}

func ReadRootValidatorResult(msg *capnp.Message) (ValidatorResult, error) {
	root, err := msg.RootPtr()
	return ValidatorResult{root.Struct()}, err
}

func (s ValidatorResult) String() string {
	str, _ := text.Marshal(0xec1c828dae8bffa3, s.Struct)
	return str
}

func (s ValidatorResult) Data() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s ValidatorResult) HasData() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ValidatorResult) SetData(v []byte) error {
	return s.Struct.SetData(0, v)
}

// ValidatorResult_List is a list of ValidatorResult.
type ValidatorResult_List struct{ capnp.List }

// NewValidatorResult creates a new list of ValidatorResult.
func NewValidatorResult_List(s *capnp.Segment, sz int32) (ValidatorResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return ValidatorResult_List{l}, err
}

func (s ValidatorResult_List) At(i int) ValidatorResult { return ValidatorResult{s.List.Struct(i)} }

func (s ValidatorResult_List) Set(i int, v ValidatorResult) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ValidatorResult_List) String() string {
	str, _ := text.MarshalList(0xec1c828dae8bffa3, s.List)
	return str
}

// ValidatorResult_Promise is a wrapper for a ValidatorResult promised by a client call.
type ValidatorResult_Promise struct{ *capnp.Pipeline }

func (p ValidatorResult_Promise) Struct() (ValidatorResult, error) {
	s, err := p.Pipeline.Struct()
	return ValidatorResult{s}, err
}

type Committee struct{ capnp.Struct }

// Committee_TypeID is the unique identifier for the type Committee.
const Committee_TypeID = 0xb89d0df283dbb65c

func NewCommittee(s *capnp.Segment) (Committee, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Committee{st}, err
}

func NewRootCommittee(s *capnp.Segment) (Committee, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Committee{st}, err
}

func ReadRootCommittee(msg *capnp.Message) (Committee, error) {
	root, err := msg.RootPtr()
	return Committee{root.Struct()}, err
}

func (s Committee) String() string {
	str, _ := text.Marshal(0xb89d0df283dbb65c, s.Struct)
	return str
}

func (s Committee) TotalPower() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s Committee) SetTotalPower(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s Committee) CommitteePower() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s Committee) SetCommitteePower(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s Committee) Validators() (ValidatorResult_List, error) {
	p, err := s.Struct.Ptr(0)
	return ValidatorResult_List{List: p.List()}, err
}

func (s Committee) HasValidators() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Committee) SetValidators(v ValidatorResult_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewValidators sets the validators field to a newly
// allocated ValidatorResult_List, preferring placement in s's segment.
func (s Committee) NewValidators(n int32) (ValidatorResult_List, error) {
	l, err := NewValidatorResult_List(s.Struct.Segment(), n)
	if err != nil {
		return ValidatorResult_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Committee_List is a list of Committee.
type Committee_List struct{ capnp.List }

// NewCommittee creates a new list of Committee.
func NewCommittee_List(s *capnp.Segment, sz int32) (Committee_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return Committee_List{l}, err
}

func (s Committee_List) At(i int) Committee { return Committee{s.List.Struct(i)} }

func (s Committee_List) Set(i int, v Committee) error { return s.List.SetStruct(i, v.Struct) }

func (s Committee_List) String() string {
	str, _ := text.MarshalList(0xb89d0df283dbb65c, s.List)
	return str
}

// Committee_Promise is a wrapper for a Committee promised by a client call.
type Committee_Promise struct{ *capnp.Pipeline }

func (p Committee_Promise) Struct() (Committee, error) {
	s, err := p.Pipeline.Struct()
	return Committee{s}, err
}

type Peer struct{ capnp.Struct }

// Peer_TypeID is the unique identifier for the type Peer.
const Peer_TypeID = 0xdeb9cfe7754f053f

func NewPeer(s *capnp.Segment) (Peer, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 4})
	return Peer{st}, err
}

func NewRootPeer(s *capnp.Segment) (Peer, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 4})
	return Peer{st}, err
}

func ReadRootPeer(msg *capnp.Message) (Peer, error) {
	root, err := msg.RootPtr()
	return Peer{root.Struct()}, err
}

func (s Peer) String() string {
	str, _ := text.Marshal(0xdeb9cfe7754f053f, s.Struct)
	return str
}

func (s Peer) Status() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s Peer) SetStatus(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s Peer) Moniker() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Peer) HasMoniker() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Peer) MonikerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Peer) SetMoniker(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Peer) Agent() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Peer) HasAgent() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Peer) AgentBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Peer) SetAgent(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Peer) PeerID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Peer) HasPeerID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Peer) PeerIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Peer) SetPeerID(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Peer) PublicKey() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Peer) HasPublicKey() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Peer) PublicKeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Peer) SetPublicKey(v string) error {
	return s.Struct.SetText(3, v)
}

func (s Peer) LastSeen() int32 {
	return int32(s.Struct.Uint32(4))
}

func (s Peer) SetLastSeen(v int32) {
	s.Struct.SetUint32(4, uint32(v))
}

func (s Peer) Flags() int32 {
	return int32(s.Struct.Uint32(8))
}

func (s Peer) SetFlags(v int32) {
	s.Struct.SetUint32(8, uint32(v))
}

func (s Peer) Height() uint32 {
	return s.Struct.Uint32(12)
}

func (s Peer) SetHeight(v uint32) {
	s.Struct.SetUint32(12, v)
}

func (s Peer) ReceivedMessages() int32 {
	return int32(s.Struct.Uint32(16))
}

func (s Peer) SetReceivedMessages(v int32) {
	s.Struct.SetUint32(16, uint32(v))
}

func (s Peer) InvalidMessages() int32 {
	return int32(s.Struct.Uint32(20))
}

func (s Peer) SetInvalidMessages(v int32) {
	s.Struct.SetUint32(20, uint32(v))
}

func (s Peer) ReceivedBytes() int32 {
	return int32(s.Struct.Uint32(24))
}

func (s Peer) SetReceivedBytes(v int32) {
	s.Struct.SetUint32(24, uint32(v))
}

// Peer_List is a list of Peer.
type Peer_List struct{ capnp.List }

// NewPeer creates a new list of Peer.
func NewPeer_List(s *capnp.Segment, sz int32) (Peer_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 4}, sz)
	return Peer_List{l}, err
}

func (s Peer_List) At(i int) Peer { return Peer{s.List.Struct(i)} }

func (s Peer_List) Set(i int, v Peer) error { return s.List.SetStruct(i, v.Struct) }

func (s Peer_List) String() string {
	str, _ := text.MarshalList(0xdeb9cfe7754f053f, s.List)
	return str
}

// Peer_Promise is a wrapper for a Peer promised by a client call.
type Peer_Promise struct{ *capnp.Pipeline }

func (p Peer_Promise) Struct() (Peer, error) {
	s, err := p.Pipeline.Struct()
	return Peer{s}, err
}

type NetworkInfoResult struct{ capnp.Struct }

// NetworkInfoResult_TypeID is the unique identifier for the type NetworkInfoResult.
const NetworkInfoResult_TypeID = 0x9770d1aea1bdc9cb

func NewNetworkInfoResult(s *capnp.Segment) (NetworkInfoResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return NetworkInfoResult{st}, err
}

func NewRootNetworkInfoResult(s *capnp.Segment) (NetworkInfoResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return NetworkInfoResult{st}, err
}

func ReadRootNetworkInfoResult(msg *capnp.Message) (NetworkInfoResult, error) {
	root, err := msg.RootPtr()
	return NetworkInfoResult{root.Struct()}, err
}

func (s NetworkInfoResult) String() string {
	str, _ := text.Marshal(0x9770d1aea1bdc9cb, s.Struct)
	return str
}

func (s NetworkInfoResult) PeerID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s NetworkInfoResult) HasPeerID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s NetworkInfoResult) PeerIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s NetworkInfoResult) SetPeerID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s NetworkInfoResult) Peers() (Peer_List, error) {
	p, err := s.Struct.Ptr(1)
	return Peer_List{List: p.List()}, err
}

func (s NetworkInfoResult) HasPeers() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s NetworkInfoResult) SetPeers(v Peer_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewPeers sets the peers field to a newly
// allocated Peer_List, preferring placement in s's segment.
func (s NetworkInfoResult) NewPeers(n int32) (Peer_List, error) {
	l, err := NewPeer_List(s.Struct.Segment(), n)
	if err != nil {
		return Peer_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// NetworkInfoResult_List is a list of NetworkInfoResult.
type NetworkInfoResult_List struct{ capnp.List }

// NewNetworkInfoResult creates a new list of NetworkInfoResult.
func NewNetworkInfoResult_List(s *capnp.Segment, sz int32) (NetworkInfoResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return NetworkInfoResult_List{l}, err
}

func (s NetworkInfoResult_List) At(i int) NetworkInfoResult {
	return NetworkInfoResult{s.List.Struct(i)}
}

func (s NetworkInfoResult_List) Set(i int, v NetworkInfoResult) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s NetworkInfoResult_List) String() string {
	str, _ := text.MarshalList(0x9770d1aea1bdc9cb, s.List)
	return str
}

// NetworkInfoResult_Promise is a wrapper for a NetworkInfoResult promised by a client call.
type NetworkInfoResult_Promise struct{ *capnp.Pipeline }

func (p NetworkInfoResult_Promise) Struct() (NetworkInfoResult, error) {
	s, err := p.Pipeline.Struct()
	return NetworkInfoResult{s}, err
}

type Vote struct{ capnp.Struct }

// Vote_TypeID is the unique identifier for the type Vote.
const Vote_TypeID = 0xab9a904927908aff

func NewVote(s *capnp.Segment) (Vote, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Vote{st}, err
}

func NewRootVote(s *capnp.Segment) (Vote, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Vote{st}, err
}

func ReadRootVote(msg *capnp.Message) (Vote, error) {
	root, err := msg.RootPtr()
	return Vote{root.Struct()}, err
}

func (s Vote) String() string {
	str, _ := text.Marshal(0xab9a904927908aff, s.Struct)
	return str
}

func (s Vote) Type() int8 {
	return int8(s.Struct.Uint8(0))
}

func (s Vote) SetType(v int8) {
	s.Struct.SetUint8(0, uint8(v))
}

func (s Vote) Voter() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Vote) HasVoter() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Vote) VoterBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Vote) SetVoter(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Vote) BlockHash() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Vote) HasBlockHash() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Vote) SetBlockHash(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Vote) Round() int16 {
	return int16(s.Struct.Uint16(2))
}

func (s Vote) SetRound(v int16) {
	s.Struct.SetUint16(2, uint16(v))
}

// Vote_List is a list of Vote.
type Vote_List struct{ capnp.List }

// NewVote creates a new list of Vote.
func NewVote_List(s *capnp.Segment, sz int32) (Vote_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Vote_List{l}, err
}

func (s Vote_List) At(i int) Vote { return Vote{s.List.Struct(i)} }

func (s Vote_List) Set(i int, v Vote) error { return s.List.SetStruct(i, v.Struct) }

func (s Vote_List) String() string {
	str, _ := text.MarshalList(0xab9a904927908aff, s.List)
	return str
}

// Vote_Promise is a wrapper for a Vote promised by a client call.
type Vote_Promise struct{ *capnp.Pipeline }

func (p Vote_Promise) Struct() (Vote, error) {
	s, err := p.Pipeline.Struct()
	return Vote{s}, err
}

type ConsensusInfoResult struct{ capnp.Struct }

// ConsensusInfoResult_TypeID is the unique identifier for the type ConsensusInfoResult.
const ConsensusInfoResult_TypeID = 0xddf1212e9514d1f1

func NewConsensusInfoResult(s *capnp.Segment) (ConsensusInfoResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ConsensusInfoResult{st}, err
}

func NewRootConsensusInfoResult(s *capnp.Segment) (ConsensusInfoResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ConsensusInfoResult{st}, err
}

func ReadRootConsensusInfoResult(msg *capnp.Message) (ConsensusInfoResult, error) {
	root, err := msg.RootPtr()
	return ConsensusInfoResult{root.Struct()}, err
}

func (s ConsensusInfoResult) String() string {
	str, _ := text.Marshal(0xddf1212e9514d1f1, s.Struct)
	return str
}

func (s ConsensusInfoResult) Height() uint32 {
	return s.Struct.Uint32(0)
}

func (s ConsensusInfoResult) SetHeight(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s ConsensusInfoResult) Round() int16 {
	return int16(s.Struct.Uint16(4))
}

func (s ConsensusInfoResult) SetRound(v int16) {
	s.Struct.SetUint16(4, uint16(v))
}

func (s ConsensusInfoResult) Votes() (Vote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Vote_List{List: p.List()}, err
}

func (s ConsensusInfoResult) HasVotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ConsensusInfoResult) SetVotes(v Vote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewVotes sets the votes field to a newly
// allocated Vote_List, preferring placement in s's segment.
func (s ConsensusInfoResult) NewVotes(n int32) (Vote_List, error) {
	l, err := NewVote_List(s.Struct.Segment(), n)
	if err != nil {
		return Vote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// ConsensusInfoResult_List is a list of ConsensusInfoResult.
type ConsensusInfoResult_List struct{ capnp.List }

// NewConsensusInfoResult creates a new list of ConsensusInfoResult.
func NewConsensusInfoResult_List(s *capnp.Segment, sz int32) (ConsensusInfoResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return ConsensusInfoResult_List{l}, err
}

func (s ConsensusInfoResult_List) At(i int) ConsensusInfoResult {
	return ConsensusInfoResult{s.List.Struct(i)}
}

func (s ConsensusInfoResult_List) Set(i int, v ConsensusInfoResult) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ConsensusInfoResult_List) String() string {
	str, _ := text.MarshalList(0xddf1212e9514d1f1, s.List)
	return str
}

// ConsensusInfoResult_Promise is a wrapper for a ConsensusInfoResult promised by a client call.
type ConsensusInfoResult_Promise struct{ *capnp.Pipeline }

func (p ConsensusInfoResult_Promise) Struct() (ConsensusInfoResult, error) {
	s, err := p.Pipeline.Struct()
	return ConsensusInfoResult{s}, err
}

type SendTransactionResult struct{ capnp.Struct }

// SendTransactionResult_TypeID is the unique identifier for the type SendTransactionResult.
const SendTransactionResult_TypeID = 0xcfd704b9b2c62a4a

func NewSendTransactionResult(s *capnp.Segment) (SendTransactionResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SendTransactionResult{st}, err
}

func NewRootSendTransactionResult(s *capnp.Segment) (SendTransactionResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SendTransactionResult{st}, err
}

func ReadRootSendTransactionResult(msg *capnp.Message) (SendTransactionResult, error) {
	root, err := msg.RootPtr()
	return SendTransactionResult{root.Struct()}, err
}

func (s SendTransactionResult) String() string {
	str, _ := text.Marshal(0xcfd704b9b2c62a4a, s.Struct)
	return str
}

func (s SendTransactionResult) Status() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s SendTransactionResult) SetStatus(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s SendTransactionResult) Id() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SendTransactionResult) HasId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s SendTransactionResult) SetId(v []byte) error {
	return s.Struct.SetData(0, v)
}

// SendTransactionResult_List is a list of SendTransactionResult.
type SendTransactionResult_List struct{ capnp.List }

// NewSendTransactionResult creates a new list of SendTransactionResult.
func NewSendTransactionResult_List(s *capnp.Segment, sz int32) (SendTransactionResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return SendTransactionResult_List{l}, err
}

func (s SendTransactionResult_List) At(i int) SendTransactionResult {
	return SendTransactionResult{s.List.Struct(i)}
}

func (s SendTransactionResult_List) Set(i int, v SendTransactionResult) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SendTransactionResult_List) String() string {
	str, _ := text.MarshalList(0xcfd704b9b2c62a4a, s.List)
	return str
}

// SendTransactionResult_Promise is a wrapper for a SendTransactionResult promised by a client call.
type SendTransactionResult_Promise struct{ *capnp.Pipeline }

func (p SendTransactionResult_Promise) Struct() (SendTransactionResult, error) {
	s, err := p.Pipeline.Struct()
	return SendTransactionResult{s}, err
}

type PactusServer struct{ Client capnp.Client }

// PactusServer_TypeID is the unique identifier for the type PactusServer.
const PactusServer_TypeID = 0x93e35d981ce226a9

func (c PactusServer) GetBlock(ctx context.Context, params func(PactusServer_getBlock_Params) error, opts ...capnp.CallOption) PactusServer_getBlock_Results_Promise {
	if c.Client == nil {
		return PactusServer_getBlock_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      0,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlock",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getBlock_Params{Struct: s}) }
	}
	return PactusServer_getBlock_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetBlockHash(ctx context.Context, params func(PactusServer_getBlockHash_Params) error, opts ...capnp.CallOption) PactusServer_getBlockHash_Results_Promise {
	if c.Client == nil {
		return PactusServer_getBlockHash_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      1,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlockHash",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getBlockHash_Params{Struct: s}) }
	}
	return PactusServer_getBlockHash_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetBlockHeight(ctx context.Context, params func(PactusServer_getBlockHeight_Params) error, opts ...capnp.CallOption) PactusServer_getBlockHeight_Results_Promise {
	if c.Client == nil {
		return PactusServer_getBlockHeight_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      2,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlockHeight",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getBlockHeight_Params{Struct: s}) }
	}
	return PactusServer_getBlockHeight_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetTransaction(ctx context.Context, params func(PactusServer_getTransaction_Params) error, opts ...capnp.CallOption) PactusServer_getTransaction_Results_Promise {
	if c.Client == nil {
		return PactusServer_getTransaction_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      3,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getTransaction",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getTransaction_Params{Struct: s}) }
	}
	return PactusServer_getTransaction_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetAccount(ctx context.Context, params func(PactusServer_getAccount_Params) error, opts ...capnp.CallOption) PactusServer_getAccount_Results_Promise {
	if c.Client == nil {
		return PactusServer_getAccount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      4,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getAccount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getAccount_Params{Struct: s}) }
	}
	return PactusServer_getAccount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetValidator(ctx context.Context, params func(PactusServer_getValidator_Params) error, opts ...capnp.CallOption) PactusServer_getValidator_Results_Promise {
	if c.Client == nil {
		return PactusServer_getValidator_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      5,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getValidator",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getValidator_Params{Struct: s}) }
	}
	return PactusServer_getValidator_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetBlockchainInfo(ctx context.Context, params func(PactusServer_getBlockchainInfo_Params) error, opts ...capnp.CallOption) PactusServer_getBlockchainInfo_Results_Promise {
	if c.Client == nil {
		return PactusServer_getBlockchainInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      6,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlockchainInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getBlockchainInfo_Params{Struct: s}) }
	}
	return PactusServer_getBlockchainInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetNetworkInfo(ctx context.Context, params func(PactusServer_getNetworkInfo_Params) error, opts ...capnp.CallOption) PactusServer_getNetworkInfo_Results_Promise {
	if c.Client == nil {
		return PactusServer_getNetworkInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      7,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getNetworkInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getNetworkInfo_Params{Struct: s}) }
	}
	return PactusServer_getNetworkInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) GetConsensusInfo(ctx context.Context, params func(PactusServer_getConsensusInfo_Params) error, opts ...capnp.CallOption) PactusServer_getConsensusInfo_Results_Promise {
	if c.Client == nil {
		return PactusServer_getConsensusInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      8,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getConsensusInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_getConsensusInfo_Params{Struct: s}) }
	}
	return PactusServer_getConsensusInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c PactusServer) SendRawTransaction(ctx context.Context, params func(PactusServer_sendRawTransaction_Params) error, opts ...capnp.CallOption) PactusServer_sendRawTransaction_Results_Promise {
	if c.Client == nil {
		return PactusServer_sendRawTransaction_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      9,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "sendRawTransaction",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(PactusServer_sendRawTransaction_Params{Struct: s}) }
	}
	return PactusServer_sendRawTransaction_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type PactusServer_Server interface {
	GetBlock(PactusServer_getBlock) error

	GetBlockHash(PactusServer_getBlockHash) error

	GetBlockHeight(PactusServer_getBlockHeight) error

	GetTransaction(PactusServer_getTransaction) error

	GetAccount(PactusServer_getAccount) error

	GetValidator(PactusServer_getValidator) error

	GetBlockchainInfo(PactusServer_getBlockchainInfo) error

	GetNetworkInfo(PactusServer_getNetworkInfo) error

	GetConsensusInfo(PactusServer_getConsensusInfo) error

	SendRawTransaction(PactusServer_sendRawTransaction) error
}

func PactusServer_ServerToClient(s PactusServer_Server) PactusServer {
	c, _ := s.(server.Closer)
	return PactusServer{Client: server.New(PactusServer_Methods(nil, s), c)}
}

func PactusServer_Methods(methods []server.Method, s PactusServer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 10)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      0,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlock",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getBlock{c, opts, PactusServer_getBlock_Params{Struct: p}, PactusServer_getBlock_Results{Struct: r}}
			return s.GetBlock(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      1,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlockHash",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getBlockHash{c, opts, PactusServer_getBlockHash_Params{Struct: p}, PactusServer_getBlockHash_Results{Struct: r}}
			return s.GetBlockHash(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      2,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlockHeight",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getBlockHeight{c, opts, PactusServer_getBlockHeight_Params{Struct: p}, PactusServer_getBlockHeight_Results{Struct: r}}
			return s.GetBlockHeight(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      3,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getTransaction",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getTransaction{c, opts, PactusServer_getTransaction_Params{Struct: p}, PactusServer_getTransaction_Results{Struct: r}}
			return s.GetTransaction(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      4,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getAccount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getAccount{c, opts, PactusServer_getAccount_Params{Struct: p}, PactusServer_getAccount_Results{Struct: r}}
			return s.GetAccount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      5,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getValidator",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getValidator{c, opts, PactusServer_getValidator_Params{Struct: p}, PactusServer_getValidator_Results{Struct: r}}
			return s.GetValidator(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      6,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getBlockchainInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getBlockchainInfo{c, opts, PactusServer_getBlockchainInfo_Params{Struct: p}, PactusServer_getBlockchainInfo_Results{Struct: r}}
			return s.GetBlockchainInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      7,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getNetworkInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getNetworkInfo{c, opts, PactusServer_getNetworkInfo_Params{Struct: p}, PactusServer_getNetworkInfo_Results{Struct: r}}
			return s.GetNetworkInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      8,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "getConsensusInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_getConsensusInfo{c, opts, PactusServer_getConsensusInfo_Params{Struct: p}, PactusServer_getConsensusInfo_Results{Struct: r}}
			return s.GetConsensusInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x93e35d981ce226a9,
			MethodID:      9,
			InterfaceName: "www/capnp/pactus.capnp:PactusServer",
			MethodName:    "sendRawTransaction",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := PactusServer_sendRawTransaction{c, opts, PactusServer_sendRawTransaction_Params{Struct: p}, PactusServer_sendRawTransaction_Results{Struct: r}}
			return s.SendRawTransaction(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// PactusServer_getBlock holds the arguments for a server call to PactusServer.getBlock.
type PactusServer_getBlock struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getBlock_Params
	Results PactusServer_getBlock_Results
}

// PactusServer_getBlockHash holds the arguments for a server call to PactusServer.getBlockHash.
type PactusServer_getBlockHash struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getBlockHash_Params
	Results PactusServer_getBlockHash_Results
}

// PactusServer_getBlockHeight holds the arguments for a server call to PactusServer.getBlockHeight.
type PactusServer_getBlockHeight struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getBlockHeight_Params
	Results PactusServer_getBlockHeight_Results
}

// PactusServer_getTransaction holds the arguments for a server call to PactusServer.getTransaction.
type PactusServer_getTransaction struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getTransaction_Params
	Results PactusServer_getTransaction_Results
}

// PactusServer_getAccount holds the arguments for a server call to PactusServer.getAccount.
type PactusServer_getAccount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getAccount_Params
	Results PactusServer_getAccount_Results
}

// PactusServer_getValidator holds the arguments for a server call to PactusServer.getValidator.
type PactusServer_getValidator struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getValidator_Params
	Results PactusServer_getValidator_Results
}

// PactusServer_getBlockchainInfo holds the arguments for a server call to PactusServer.getBlockchainInfo.
type PactusServer_getBlockchainInfo struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getBlockchainInfo_Params
	Results PactusServer_getBlockchainInfo_Results
}

// PactusServer_getNetworkInfo holds the arguments for a server call to PactusServer.getNetworkInfo.
type PactusServer_getNetworkInfo struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getNetworkInfo_Params
	Results PactusServer_getNetworkInfo_Results
}

// PactusServer_getConsensusInfo holds the arguments for a server call to PactusServer.getConsensusInfo.
type PactusServer_getConsensusInfo struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_getConsensusInfo_Params
	Results PactusServer_getConsensusInfo_Results
}

// PactusServer_sendRawTransaction holds the arguments for a server call to PactusServer.sendRawTransaction.
type PactusServer_sendRawTransaction struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  PactusServer_sendRawTransaction_Params
	Results PactusServer_sendRawTransaction_Results
}

type PactusServer_getBlock_Params struct{ capnp.Struct }

// PactusServer_getBlock_Params_TypeID is the unique identifier for the type PactusServer_getBlock_Params.
const PactusServer_getBlock_Params_TypeID = 0xc491154730a9b313

func NewPactusServer_getBlock_Params(s *capnp.Segment) (PactusServer_getBlock_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PactusServer_getBlock_Params{st}, err
}

func NewRootPactusServer_getBlock_Params(s *capnp.Segment) (PactusServer_getBlock_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PactusServer_getBlock_Params{st}, err
}

func ReadRootPactusServer_getBlock_Params(msg *capnp.Message) (PactusServer_getBlock_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlock_Params{root.Struct()}, err
}

func (s PactusServer_getBlock_Params) String() string {
	str, _ := text.Marshal(0xc491154730a9b313, s.Struct)
	return str
}

func (s PactusServer_getBlock_Params) Height() uint32 {
	return s.Struct.Uint32(0)
}

func (s PactusServer_getBlock_Params) SetHeight(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s PactusServer_getBlock_Params) Verbosity() int32 {
	return int32(s.Struct.Uint32(4))
}

func (s PactusServer_getBlock_Params) SetVerbosity(v int32) {
	s.Struct.SetUint32(4, uint32(v))
}

// PactusServer_getBlock_Params_List is a list of PactusServer_getBlock_Params.
type PactusServer_getBlock_Params_List struct{ capnp.List }

// NewPactusServer_getBlock_Params creates a new list of PactusServer_getBlock_Params.
func NewPactusServer_getBlock_Params_List(s *capnp.Segment, sz int32) (PactusServer_getBlock_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return PactusServer_getBlock_Params_List{l}, err
}

func (s PactusServer_getBlock_Params_List) At(i int) PactusServer_getBlock_Params {
	return PactusServer_getBlock_Params{s.List.Struct(i)}
}

func (s PactusServer_getBlock_Params_List) Set(i int, v PactusServer_getBlock_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlock_Params_List) String() string {
	str, _ := text.MarshalList(0xc491154730a9b313, s.List)
	return str
}

// PactusServer_getBlock_Params_Promise is a wrapper for a PactusServer_getBlock_Params promised by a client call.
type PactusServer_getBlock_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlock_Params_Promise) Struct() (PactusServer_getBlock_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlock_Params{s}, err
}

type PactusServer_getBlock_Results struct{ capnp.Struct }

// PactusServer_getBlock_Results_TypeID is the unique identifier for the type PactusServer_getBlock_Results.
const PactusServer_getBlock_Results_TypeID = 0xa11579dd4962059f

func NewPactusServer_getBlock_Results(s *capnp.Segment) (PactusServer_getBlock_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlock_Results{st}, err
}

func NewRootPactusServer_getBlock_Results(s *capnp.Segment) (PactusServer_getBlock_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlock_Results{st}, err
}

func ReadRootPactusServer_getBlock_Results(msg *capnp.Message) (PactusServer_getBlock_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlock_Results{root.Struct()}, err
}

func (s PactusServer_getBlock_Results) String() string {
	str, _ := text.Marshal(0xa11579dd4962059f, s.Struct)
	return str
}

func (s PactusServer_getBlock_Results) Result() (BlockResult, error) {
	p, err := s.Struct.Ptr(0)
	return BlockResult{Struct: p.Struct()}, err
}

func (s PactusServer_getBlock_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getBlock_Results) SetResult(v BlockResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated BlockResult struct, preferring placement in s's segment.
func (s PactusServer_getBlock_Results) NewResult() (BlockResult, error) {
	ss, err := NewBlockResult(s.Struct.Segment())
	if err != nil {
		return BlockResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_getBlock_Results_List is a list of PactusServer_getBlock_Results.
type PactusServer_getBlock_Results_List struct{ capnp.List }

// NewPactusServer_getBlock_Results creates a new list of PactusServer_getBlock_Results.
func NewPactusServer_getBlock_Results_List(s *capnp.Segment, sz int32) (PactusServer_getBlock_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getBlock_Results_List{l}, err
}

func (s PactusServer_getBlock_Results_List) At(i int) PactusServer_getBlock_Results {
	return PactusServer_getBlock_Results{s.List.Struct(i)}
}

func (s PactusServer_getBlock_Results_List) Set(i int, v PactusServer_getBlock_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlock_Results_List) String() string {
	str, _ := text.MarshalList(0xa11579dd4962059f, s.List)
	return str
}

// PactusServer_getBlock_Results_Promise is a wrapper for a PactusServer_getBlock_Results promised by a client call.
type PactusServer_getBlock_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlock_Results_Promise) Struct() (PactusServer_getBlock_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlock_Results{s}, err
}

func (p PactusServer_getBlock_Results_Promise) Result() BlockResult_Promise {
	return BlockResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PactusServer_getBlockHash_Params struct{ capnp.Struct }

// PactusServer_getBlockHash_Params_TypeID is the unique identifier for the type PactusServer_getBlockHash_Params.
const PactusServer_getBlockHash_Params_TypeID = 0xc7ebd41a5aa611ff

func NewPactusServer_getBlockHash_Params(s *capnp.Segment) (PactusServer_getBlockHash_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PactusServer_getBlockHash_Params{st}, err
}

func NewRootPactusServer_getBlockHash_Params(s *capnp.Segment) (PactusServer_getBlockHash_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PactusServer_getBlockHash_Params{st}, err
}

func ReadRootPactusServer_getBlockHash_Params(msg *capnp.Message) (PactusServer_getBlockHash_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlockHash_Params{root.Struct()}, err
}

func (s PactusServer_getBlockHash_Params) String() string {
	str, _ := text.Marshal(0xc7ebd41a5aa611ff, s.Struct)
	return str
}

func (s PactusServer_getBlockHash_Params) Height() uint32 {
	return s.Struct.Uint32(0)
}

func (s PactusServer_getBlockHash_Params) SetHeight(v uint32) {
	s.Struct.SetUint32(0, v)
}

// PactusServer_getBlockHash_Params_List is a list of PactusServer_getBlockHash_Params.
type PactusServer_getBlockHash_Params_List struct{ capnp.List }

// NewPactusServer_getBlockHash_Params creates a new list of PactusServer_getBlockHash_Params.
func NewPactusServer_getBlockHash_Params_List(s *capnp.Segment, sz int32) (PactusServer_getBlockHash_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return PactusServer_getBlockHash_Params_List{l}, err
}

func (s PactusServer_getBlockHash_Params_List) At(i int) PactusServer_getBlockHash_Params {
	return PactusServer_getBlockHash_Params{s.List.Struct(i)}
}

func (s PactusServer_getBlockHash_Params_List) Set(i int, v PactusServer_getBlockHash_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlockHash_Params_List) String() string {
	str, _ := text.MarshalList(0xc7ebd41a5aa611ff, s.List)
	return str
}

// PactusServer_getBlockHash_Params_Promise is a wrapper for a PactusServer_getBlockHash_Params promised by a client call.
type PactusServer_getBlockHash_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlockHash_Params_Promise) Struct() (PactusServer_getBlockHash_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlockHash_Params{s}, err
}

type PactusServer_getBlockHash_Results struct{ capnp.Struct }

// PactusServer_getBlockHash_Results_TypeID is the unique identifier for the type PactusServer_getBlockHash_Results.
const PactusServer_getBlockHash_Results_TypeID = 0xb4956119e567e635

func NewPactusServer_getBlockHash_Results(s *capnp.Segment) (PactusServer_getBlockHash_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlockHash_Results{st}, err
}

func NewRootPactusServer_getBlockHash_Results(s *capnp.Segment) (PactusServer_getBlockHash_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlockHash_Results{st}, err
}

func ReadRootPactusServer_getBlockHash_Results(msg *capnp.Message) (PactusServer_getBlockHash_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlockHash_Results{root.Struct()}, err
}

func (s PactusServer_getBlockHash_Results) String() string {
	str, _ := text.Marshal(0xb4956119e567e635, s.Struct)
	return str
}

func (s PactusServer_getBlockHash_Results) Result() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s PactusServer_getBlockHash_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getBlockHash_Results) SetResult(v []byte) error {
	return s.Struct.SetData(0, v)
}

// PactusServer_getBlockHash_Results_List is a list of PactusServer_getBlockHash_Results.
type PactusServer_getBlockHash_Results_List struct{ capnp.List }

// NewPactusServer_getBlockHash_Results creates a new list of PactusServer_getBlockHash_Results.
func NewPactusServer_getBlockHash_Results_List(s *capnp.Segment, sz int32) (PactusServer_getBlockHash_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getBlockHash_Results_List{l}, err
}

func (s PactusServer_getBlockHash_Results_List) At(i int) PactusServer_getBlockHash_Results {
	return PactusServer_getBlockHash_Results{s.List.Struct(i)}
}

func (s PactusServer_getBlockHash_Results_List) Set(i int, v PactusServer_getBlockHash_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlockHash_Results_List) String() string {
	str, _ := text.MarshalList(0xb4956119e567e635, s.List)
	return str
}

// PactusServer_getBlockHash_Results_Promise is a wrapper for a PactusServer_getBlockHash_Results promised by a client call.
type PactusServer_getBlockHash_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlockHash_Results_Promise) Struct() (PactusServer_getBlockHash_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlockHash_Results{s}, err
}

type PactusServer_getBlockHeight_Params struct{ capnp.Struct }

// PactusServer_getBlockHeight_Params_TypeID is the unique identifier for the type PactusServer_getBlockHeight_Params.
const PactusServer_getBlockHeight_Params_TypeID = 0xa2781bf8c3aee3b7

func NewPactusServer_getBlockHeight_Params(s *capnp.Segment) (PactusServer_getBlockHeight_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlockHeight_Params{st}, err
}

func NewRootPactusServer_getBlockHeight_Params(s *capnp.Segment) (PactusServer_getBlockHeight_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlockHeight_Params{st}, err
}

func ReadRootPactusServer_getBlockHeight_Params(msg *capnp.Message) (PactusServer_getBlockHeight_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlockHeight_Params{root.Struct()}, err
}

func (s PactusServer_getBlockHeight_Params) String() string {
	str, _ := text.Marshal(0xa2781bf8c3aee3b7, s.Struct)
	return str
}

func (s PactusServer_getBlockHeight_Params) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s PactusServer_getBlockHeight_Params) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getBlockHeight_Params) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

// PactusServer_getBlockHeight_Params_List is a list of PactusServer_getBlockHeight_Params.
type PactusServer_getBlockHeight_Params_List struct{ capnp.List }

// NewPactusServer_getBlockHeight_Params creates a new list of PactusServer_getBlockHeight_Params.
func NewPactusServer_getBlockHeight_Params_List(s *capnp.Segment, sz int32) (PactusServer_getBlockHeight_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getBlockHeight_Params_List{l}, err
}

func (s PactusServer_getBlockHeight_Params_List) At(i int) PactusServer_getBlockHeight_Params {
	return PactusServer_getBlockHeight_Params{s.List.Struct(i)}
}

func (s PactusServer_getBlockHeight_Params_List) Set(i int, v PactusServer_getBlockHeight_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlockHeight_Params_List) String() string {
	str, _ := text.MarshalList(0xa2781bf8c3aee3b7, s.List)
	return str
}

// PactusServer_getBlockHeight_Params_Promise is a wrapper for a PactusServer_getBlockHeight_Params promised by a client call.
type PactusServer_getBlockHeight_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlockHeight_Params_Promise) Struct() (PactusServer_getBlockHeight_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlockHeight_Params{s}, err
}

type PactusServer_getBlockHeight_Results struct{ capnp.Struct }

// PactusServer_getBlockHeight_Results_TypeID is the unique identifier for the type PactusServer_getBlockHeight_Results.
const PactusServer_getBlockHeight_Results_TypeID = 0xe0f664cf64c2a69d

func NewPactusServer_getBlockHeight_Results(s *capnp.Segment) (PactusServer_getBlockHeight_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PactusServer_getBlockHeight_Results{st}, err
}

func NewRootPactusServer_getBlockHeight_Results(s *capnp.Segment) (PactusServer_getBlockHeight_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return PactusServer_getBlockHeight_Results{st}, err
}

func ReadRootPactusServer_getBlockHeight_Results(msg *capnp.Message) (PactusServer_getBlockHeight_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlockHeight_Results{root.Struct()}, err
}

func (s PactusServer_getBlockHeight_Results) String() string {
	str, _ := text.Marshal(0xe0f664cf64c2a69d, s.Struct)
	return str
}

func (s PactusServer_getBlockHeight_Results) Result() uint32 {
	return s.Struct.Uint32(0)
}

func (s PactusServer_getBlockHeight_Results) SetResult(v uint32) {
	s.Struct.SetUint32(0, v)
}

// PactusServer_getBlockHeight_Results_List is a list of PactusServer_getBlockHeight_Results.
type PactusServer_getBlockHeight_Results_List struct{ capnp.List }

// NewPactusServer_getBlockHeight_Results creates a new list of PactusServer_getBlockHeight_Results.
func NewPactusServer_getBlockHeight_Results_List(s *capnp.Segment, sz int32) (PactusServer_getBlockHeight_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return PactusServer_getBlockHeight_Results_List{l}, err
}

func (s PactusServer_getBlockHeight_Results_List) At(i int) PactusServer_getBlockHeight_Results {
	return PactusServer_getBlockHeight_Results{s.List.Struct(i)}
}

func (s PactusServer_getBlockHeight_Results_List) Set(i int, v PactusServer_getBlockHeight_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlockHeight_Results_List) String() string {
	str, _ := text.MarshalList(0xe0f664cf64c2a69d, s.List)
	return str
}

// PactusServer_getBlockHeight_Results_Promise is a wrapper for a PactusServer_getBlockHeight_Results promised by a client call.
type PactusServer_getBlockHeight_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlockHeight_Results_Promise) Struct() (PactusServer_getBlockHeight_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlockHeight_Results{s}, err
}

type PactusServer_getTransaction_Params struct{ capnp.Struct }

// PactusServer_getTransaction_Params_TypeID is the unique identifier for the type PactusServer_getTransaction_Params.
const PactusServer_getTransaction_Params_TypeID = 0x88b90d73d814fe7b

func NewPactusServer_getTransaction_Params(s *capnp.Segment) (PactusServer_getTransaction_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PactusServer_getTransaction_Params{st}, err
}

func NewRootPactusServer_getTransaction_Params(s *capnp.Segment) (PactusServer_getTransaction_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PactusServer_getTransaction_Params{st}, err
}

func ReadRootPactusServer_getTransaction_Params(msg *capnp.Message) (PactusServer_getTransaction_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getTransaction_Params{root.Struct()}, err
}

func (s PactusServer_getTransaction_Params) String() string {
	str, _ := text.Marshal(0x88b90d73d814fe7b, s.Struct)
	return str
}

func (s PactusServer_getTransaction_Params) Id() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s PactusServer_getTransaction_Params) HasId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getTransaction_Params) SetId(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s PactusServer_getTransaction_Params) Verbosity() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s PactusServer_getTransaction_Params) SetVerbosity(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// PactusServer_getTransaction_Params_List is a list of PactusServer_getTransaction_Params.
type PactusServer_getTransaction_Params_List struct{ capnp.List }

// NewPactusServer_getTransaction_Params creates a new list of PactusServer_getTransaction_Params.
func NewPactusServer_getTransaction_Params_List(s *capnp.Segment, sz int32) (PactusServer_getTransaction_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return PactusServer_getTransaction_Params_List{l}, err
}

func (s PactusServer_getTransaction_Params_List) At(i int) PactusServer_getTransaction_Params {
	return PactusServer_getTransaction_Params{s.List.Struct(i)}
}

func (s PactusServer_getTransaction_Params_List) Set(i int, v PactusServer_getTransaction_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getTransaction_Params_List) String() string {
	str, _ := text.MarshalList(0x88b90d73d814fe7b, s.List)
	return str
}

// PactusServer_getTransaction_Params_Promise is a wrapper for a PactusServer_getTransaction_Params promised by a client call.
type PactusServer_getTransaction_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getTransaction_Params_Promise) Struct() (PactusServer_getTransaction_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getTransaction_Params{s}, err
}

type PactusServer_getTransaction_Results struct{ capnp.Struct }

// PactusServer_getTransaction_Results_TypeID is the unique identifier for the type PactusServer_getTransaction_Results.
const PactusServer_getTransaction_Results_TypeID = 0x872ed7cc55340b43

func NewPactusServer_getTransaction_Results(s *capnp.Segment) (PactusServer_getTransaction_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getTransaction_Results{st}, err
}

func NewRootPactusServer_getTransaction_Results(s *capnp.Segment) (PactusServer_getTransaction_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getTransaction_Results{st}, err
}

func ReadRootPactusServer_getTransaction_Results(msg *capnp.Message) (PactusServer_getTransaction_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getTransaction_Results{root.Struct()}, err
}

func (s PactusServer_getTransaction_Results) String() string {
	str, _ := text.Marshal(0x872ed7cc55340b43, s.Struct)
	return str
}

func (s PactusServer_getTransaction_Results) Result() (TransactionResult, error) {
	p, err := s.Struct.Ptr(0)
	return TransactionResult{Struct: p.Struct()}, err
}

func (s PactusServer_getTransaction_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getTransaction_Results) SetResult(v TransactionResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated TransactionResult struct, preferring placement in s's segment.
func (s PactusServer_getTransaction_Results) NewResult() (TransactionResult, error) {
	ss, err := NewTransactionResult(s.Struct.Segment())
	if err != nil {
		return TransactionResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_getTransaction_Results_List is a list of PactusServer_getTransaction_Results.
type PactusServer_getTransaction_Results_List struct{ capnp.List }

// NewPactusServer_getTransaction_Results creates a new list of PactusServer_getTransaction_Results.
func NewPactusServer_getTransaction_Results_List(s *capnp.Segment, sz int32) (PactusServer_getTransaction_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getTransaction_Results_List{l}, err
}

func (s PactusServer_getTransaction_Results_List) At(i int) PactusServer_getTransaction_Results {
	return PactusServer_getTransaction_Results{s.List.Struct(i)}
}

func (s PactusServer_getTransaction_Results_List) Set(i int, v PactusServer_getTransaction_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getTransaction_Results_List) String() string {
	str, _ := text.MarshalList(0x872ed7cc55340b43, s.List)
	return str
}

// PactusServer_getTransaction_Results_Promise is a wrapper for a PactusServer_getTransaction_Results promised by a client call.
type PactusServer_getTransaction_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getTransaction_Results_Promise) Struct() (PactusServer_getTransaction_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getTransaction_Results{s}, err
}

func (p PactusServer_getTransaction_Results_Promise) Result() TransactionResult_Promise {
	return TransactionResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PactusServer_getAccount_Params struct{ capnp.Struct }

// PactusServer_getAccount_Params_TypeID is the unique identifier for the type PactusServer_getAccount_Params.
const PactusServer_getAccount_Params_TypeID = 0xa9c1656f28f615b1

func NewPactusServer_getAccount_Params(s *capnp.Segment) (PactusServer_getAccount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getAccount_Params{st}, err
}

func NewRootPactusServer_getAccount_Params(s *capnp.Segment) (PactusServer_getAccount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getAccount_Params{st}, err
}

func ReadRootPactusServer_getAccount_Params(msg *capnp.Message) (PactusServer_getAccount_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getAccount_Params{root.Struct()}, err
}

func (s PactusServer_getAccount_Params) String() string {
	str, _ := text.Marshal(0xa9c1656f28f615b1, s.Struct)
	return str
}

func (s PactusServer_getAccount_Params) Address() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PactusServer_getAccount_Params) HasAddress() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getAccount_Params) AddressBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PactusServer_getAccount_Params) SetAddress(v string) error {
	return s.Struct.SetText(0, v)
}

// PactusServer_getAccount_Params_List is a list of PactusServer_getAccount_Params.
type PactusServer_getAccount_Params_List struct{ capnp.List }

// NewPactusServer_getAccount_Params creates a new list of PactusServer_getAccount_Params.
func NewPactusServer_getAccount_Params_List(s *capnp.Segment, sz int32) (PactusServer_getAccount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getAccount_Params_List{l}, err
}

func (s PactusServer_getAccount_Params_List) At(i int) PactusServer_getAccount_Params {
	return PactusServer_getAccount_Params{s.List.Struct(i)}
}

func (s PactusServer_getAccount_Params_List) Set(i int, v PactusServer_getAccount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getAccount_Params_List) String() string {
	str, _ := text.MarshalList(0xa9c1656f28f615b1, s.List)
	return str
}

// PactusServer_getAccount_Params_Promise is a wrapper for a PactusServer_getAccount_Params promised by a client call.
type PactusServer_getAccount_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getAccount_Params_Promise) Struct() (PactusServer_getAccount_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getAccount_Params{s}, err
}

type PactusServer_getAccount_Results struct{ capnp.Struct }

// PactusServer_getAccount_Results_TypeID is the unique identifier for the type PactusServer_getAccount_Results.
const PactusServer_getAccount_Results_TypeID = 0xc6a382e8a87605a0

func NewPactusServer_getAccount_Results(s *capnp.Segment) (PactusServer_getAccount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getAccount_Results{st}, err
}

func NewRootPactusServer_getAccount_Results(s *capnp.Segment) (PactusServer_getAccount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getAccount_Results{st}, err
}

func ReadRootPactusServer_getAccount_Results(msg *capnp.Message) (PactusServer_getAccount_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getAccount_Results{root.Struct()}, err
}

func (s PactusServer_getAccount_Results) String() string {
	str, _ := text.Marshal(0xc6a382e8a87605a0, s.Struct)
	return str
}

func (s PactusServer_getAccount_Results) Result() (AccountResult, error) {
	p, err := s.Struct.Ptr(0)
	return AccountResult{Struct: p.Struct()}, err
}

func (s PactusServer_getAccount_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getAccount_Results) SetResult(v AccountResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated AccountResult struct, preferring placement in s's segment.
func (s PactusServer_getAccount_Results) NewResult() (AccountResult, error) {
	ss, err := NewAccountResult(s.Struct.Segment())
	if err != nil {
		return AccountResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_getAccount_Results_List is a list of PactusServer_getAccount_Results.
type PactusServer_getAccount_Results_List struct{ capnp.List }

// NewPactusServer_getAccount_Results creates a new list of PactusServer_getAccount_Results.
func NewPactusServer_getAccount_Results_List(s *capnp.Segment, sz int32) (PactusServer_getAccount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getAccount_Results_List{l}, err
}

func (s PactusServer_getAccount_Results_List) At(i int) PactusServer_getAccount_Results {
	return PactusServer_getAccount_Results{s.List.Struct(i)}
}

func (s PactusServer_getAccount_Results_List) Set(i int, v PactusServer_getAccount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getAccount_Results_List) String() string {
	str, _ := text.MarshalList(0xc6a382e8a87605a0, s.List)
	return str
}

// PactusServer_getAccount_Results_Promise is a wrapper for a PactusServer_getAccount_Results promised by a client call.
type PactusServer_getAccount_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getAccount_Results_Promise) Struct() (PactusServer_getAccount_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getAccount_Results{s}, err
}

func (p PactusServer_getAccount_Results_Promise) Result() AccountResult_Promise {
	return AccountResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PactusServer_getValidator_Params struct{ capnp.Struct }

// PactusServer_getValidator_Params_TypeID is the unique identifier for the type PactusServer_getValidator_Params.
const PactusServer_getValidator_Params_TypeID = 0xc73bc804887c2453

func NewPactusServer_getValidator_Params(s *capnp.Segment) (PactusServer_getValidator_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getValidator_Params{st}, err
}

func NewRootPactusServer_getValidator_Params(s *capnp.Segment) (PactusServer_getValidator_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getValidator_Params{st}, err
}

func ReadRootPactusServer_getValidator_Params(msg *capnp.Message) (PactusServer_getValidator_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getValidator_Params{root.Struct()}, err
}

func (s PactusServer_getValidator_Params) String() string {
	str, _ := text.Marshal(0xc73bc804887c2453, s.Struct)
	return str
}

func (s PactusServer_getValidator_Params) Address() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PactusServer_getValidator_Params) HasAddress() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getValidator_Params) AddressBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PactusServer_getValidator_Params) SetAddress(v string) error {
	return s.Struct.SetText(0, v)
}

// PactusServer_getValidator_Params_List is a list of PactusServer_getValidator_Params.
type PactusServer_getValidator_Params_List struct{ capnp.List }

// NewPactusServer_getValidator_Params creates a new list of PactusServer_getValidator_Params.
func NewPactusServer_getValidator_Params_List(s *capnp.Segment, sz int32) (PactusServer_getValidator_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getValidator_Params_List{l}, err
}

func (s PactusServer_getValidator_Params_List) At(i int) PactusServer_getValidator_Params {
	return PactusServer_getValidator_Params{s.List.Struct(i)}
}

func (s PactusServer_getValidator_Params_List) Set(i int, v PactusServer_getValidator_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getValidator_Params_List) String() string {
	str, _ := text.MarshalList(0xc73bc804887c2453, s.List)
	return str
}

// PactusServer_getValidator_Params_Promise is a wrapper for a PactusServer_getValidator_Params promised by a client call.
type PactusServer_getValidator_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getValidator_Params_Promise) Struct() (PactusServer_getValidator_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getValidator_Params{s}, err
}

type PactusServer_getValidator_Results struct{ capnp.Struct }

// PactusServer_getValidator_Results_TypeID is the unique identifier for the type PactusServer_getValidator_Results.
const PactusServer_getValidator_Results_TypeID = 0x9ddf8c9e87a562a9

func NewPactusServer_getValidator_Results(s *capnp.Segment) (PactusServer_getValidator_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getValidator_Results{st}, err
}

func NewRootPactusServer_getValidator_Results(s *capnp.Segment) (PactusServer_getValidator_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getValidator_Results{st}, err
}

func ReadRootPactusServer_getValidator_Results(msg *capnp.Message) (PactusServer_getValidator_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getValidator_Results{root.Struct()}, err
}

func (s PactusServer_getValidator_Results) String() string {
	str, _ := text.Marshal(0x9ddf8c9e87a562a9, s.Struct)
	return str
}

func (s PactusServer_getValidator_Results) Result() (ValidatorResult, error) {
	p, err := s.Struct.Ptr(0)
	return ValidatorResult{Struct: p.Struct()}, err
}

func (s PactusServer_getValidator_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getValidator_Results) SetResult(v ValidatorResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated ValidatorResult struct, preferring placement in s's segment.
func (s PactusServer_getValidator_Results) NewResult() (ValidatorResult, error) {
	ss, err := NewValidatorResult(s.Struct.Segment())
	if err != nil {
		return ValidatorResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_getValidator_Results_List is a list of PactusServer_getValidator_Results.
type PactusServer_getValidator_Results_List struct{ capnp.List }

// NewPactusServer_getValidator_Results creates a new list of PactusServer_getValidator_Results.
func NewPactusServer_getValidator_Results_List(s *capnp.Segment, sz int32) (PactusServer_getValidator_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getValidator_Results_List{l}, err
}

func (s PactusServer_getValidator_Results_List) At(i int) PactusServer_getValidator_Results {
	return PactusServer_getValidator_Results{s.List.Struct(i)}
}

func (s PactusServer_getValidator_Results_List) Set(i int, v PactusServer_getValidator_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getValidator_Results_List) String() string {
	str, _ := text.MarshalList(0x9ddf8c9e87a562a9, s.List)
	return str
}

// PactusServer_getValidator_Results_Promise is a wrapper for a PactusServer_getValidator_Results promised by a client call.
type PactusServer_getValidator_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getValidator_Results_Promise) Struct() (PactusServer_getValidator_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getValidator_Results{s}, err
}

func (p PactusServer_getValidator_Results_Promise) Result() ValidatorResult_Promise {
	return ValidatorResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PactusServer_getBlockchainInfo_Params struct{ capnp.Struct }

// PactusServer_getBlockchainInfo_Params_TypeID is the unique identifier for the type PactusServer_getBlockchainInfo_Params.
const PactusServer_getBlockchainInfo_Params_TypeID = 0xf8e58321495ea693

func NewPactusServer_getBlockchainInfo_Params(s *capnp.Segment) (PactusServer_getBlockchainInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PactusServer_getBlockchainInfo_Params{st}, err
}

func NewRootPactusServer_getBlockchainInfo_Params(s *capnp.Segment) (PactusServer_getBlockchainInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PactusServer_getBlockchainInfo_Params{st}, err
}

func ReadRootPactusServer_getBlockchainInfo_Params(msg *capnp.Message) (PactusServer_getBlockchainInfo_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlockchainInfo_Params{root.Struct()}, err
}

func (s PactusServer_getBlockchainInfo_Params) String() string {
	str, _ := text.Marshal(0xf8e58321495ea693, s.Struct)
	return str
}

// PactusServer_getBlockchainInfo_Params_List is a list of PactusServer_getBlockchainInfo_Params.
type PactusServer_getBlockchainInfo_Params_List struct{ capnp.List }

// NewPactusServer_getBlockchainInfo_Params creates a new list of PactusServer_getBlockchainInfo_Params.
func NewPactusServer_getBlockchainInfo_Params_List(s *capnp.Segment, sz int32) (PactusServer_getBlockchainInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return PactusServer_getBlockchainInfo_Params_List{l}, err
}

func (s PactusServer_getBlockchainInfo_Params_List) At(i int) PactusServer_getBlockchainInfo_Params {
	return PactusServer_getBlockchainInfo_Params{s.List.Struct(i)}
}

func (s PactusServer_getBlockchainInfo_Params_List) Set(i int, v PactusServer_getBlockchainInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlockchainInfo_Params_List) String() string {
	str, _ := text.MarshalList(0xf8e58321495ea693, s.List)
	return str
}

// PactusServer_getBlockchainInfo_Params_Promise is a wrapper for a PactusServer_getBlockchainInfo_Params promised by a client call.
type PactusServer_getBlockchainInfo_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlockchainInfo_Params_Promise) Struct() (PactusServer_getBlockchainInfo_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlockchainInfo_Params{s}, err
}

type PactusServer_getBlockchainInfo_Results struct{ capnp.Struct }

// PactusServer_getBlockchainInfo_Results_TypeID is the unique identifier for the type PactusServer_getBlockchainInfo_Results.
const PactusServer_getBlockchainInfo_Results_TypeID = 0xe81f9cad31fab5f3

func NewPactusServer_getBlockchainInfo_Results(s *capnp.Segment) (PactusServer_getBlockchainInfo_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlockchainInfo_Results{st}, err
}

func NewRootPactusServer_getBlockchainInfo_Results(s *capnp.Segment) (PactusServer_getBlockchainInfo_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getBlockchainInfo_Results{st}, err
}

func ReadRootPactusServer_getBlockchainInfo_Results(msg *capnp.Message) (PactusServer_getBlockchainInfo_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getBlockchainInfo_Results{root.Struct()}, err
}

func (s PactusServer_getBlockchainInfo_Results) String() string {
	str, _ := text.Marshal(0xe81f9cad31fab5f3, s.Struct)
	return str
}

func (s PactusServer_getBlockchainInfo_Results) Result() (BlockchainInfoResult, error) {
	p, err := s.Struct.Ptr(0)
	return BlockchainInfoResult{Struct: p.Struct()}, err
}

func (s PactusServer_getBlockchainInfo_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getBlockchainInfo_Results) SetResult(v BlockchainInfoResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated BlockchainInfoResult struct, preferring placement in s's segment.
func (s PactusServer_getBlockchainInfo_Results) NewResult() (BlockchainInfoResult, error) {
	ss, err := NewBlockchainInfoResult(s.Struct.Segment())
	if err != nil {
		return BlockchainInfoResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_getBlockchainInfo_Results_List is a list of PactusServer_getBlockchainInfo_Results.
type PactusServer_getBlockchainInfo_Results_List struct{ capnp.List }

// NewPactusServer_getBlockchainInfo_Results creates a new list of PactusServer_getBlockchainInfo_Results.
func NewPactusServer_getBlockchainInfo_Results_List(s *capnp.Segment, sz int32) (PactusServer_getBlockchainInfo_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getBlockchainInfo_Results_List{l}, err
}

func (s PactusServer_getBlockchainInfo_Results_List) At(i int) PactusServer_getBlockchainInfo_Results {
	return PactusServer_getBlockchainInfo_Results{s.List.Struct(i)}
}

func (s PactusServer_getBlockchainInfo_Results_List) Set(i int, v PactusServer_getBlockchainInfo_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getBlockchainInfo_Results_List) String() string {
	str, _ := text.MarshalList(0xe81f9cad31fab5f3, s.List)
	return str
}

// PactusServer_getBlockchainInfo_Results_Promise is a wrapper for a PactusServer_getBlockchainInfo_Results promised by a client call.
type PactusServer_getBlockchainInfo_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getBlockchainInfo_Results_Promise) Struct() (PactusServer_getBlockchainInfo_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getBlockchainInfo_Results{s}, err
}

func (p PactusServer_getBlockchainInfo_Results_Promise) Result() BlockchainInfoResult_Promise {
	return BlockchainInfoResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PactusServer_getNetworkInfo_Params struct{ capnp.Struct }

// PactusServer_getNetworkInfo_Params_TypeID is the unique identifier for the type PactusServer_getNetworkInfo_Params.
const PactusServer_getNetworkInfo_Params_TypeID = 0xa813e92fe7395369

func NewPactusServer_getNetworkInfo_Params(s *capnp.Segment) (PactusServer_getNetworkInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PactusServer_getNetworkInfo_Params{st}, err
}

func NewRootPactusServer_getNetworkInfo_Params(s *capnp.Segment) (PactusServer_getNetworkInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PactusServer_getNetworkInfo_Params{st}, err
}

func ReadRootPactusServer_getNetworkInfo_Params(msg *capnp.Message) (PactusServer_getNetworkInfo_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getNetworkInfo_Params{root.Struct()}, err
}

func (s PactusServer_getNetworkInfo_Params) String() string {
	str, _ := text.Marshal(0xa813e92fe7395369, s.Struct)
	return str
}

// PactusServer_getNetworkInfo_Params_List is a list of PactusServer_getNetworkInfo_Params.
type PactusServer_getNetworkInfo_Params_List struct{ capnp.List }

// NewPactusServer_getNetworkInfo_Params creates a new list of PactusServer_getNetworkInfo_Params.
func NewPactusServer_getNetworkInfo_Params_List(s *capnp.Segment, sz int32) (PactusServer_getNetworkInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return PactusServer_getNetworkInfo_Params_List{l}, err
}

func (s PactusServer_getNetworkInfo_Params_List) At(i int) PactusServer_getNetworkInfo_Params {
	return PactusServer_getNetworkInfo_Params{s.List.Struct(i)}
}

func (s PactusServer_getNetworkInfo_Params_List) Set(i int, v PactusServer_getNetworkInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getNetworkInfo_Params_List) String() string {
	str, _ := text.MarshalList(0xa813e92fe7395369, s.List)
	return str
}

// PactusServer_getNetworkInfo_Params_Promise is a wrapper for a PactusServer_getNetworkInfo_Params promised by a client call.
type PactusServer_getNetworkInfo_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getNetworkInfo_Params_Promise) Struct() (PactusServer_getNetworkInfo_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getNetworkInfo_Params{s}, err
}

type PactusServer_getNetworkInfo_Results struct{ capnp.Struct }

// PactusServer_getNetworkInfo_Results_TypeID is the unique identifier for the type PactusServer_getNetworkInfo_Results.
const PactusServer_getNetworkInfo_Results_TypeID = 0xec6734738efb7faf

func NewPactusServer_getNetworkInfo_Results(s *capnp.Segment) (PactusServer_getNetworkInfo_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getNetworkInfo_Results{st}, err
}

func NewRootPactusServer_getNetworkInfo_Results(s *capnp.Segment) (PactusServer_getNetworkInfo_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getNetworkInfo_Results{st}, err
}

func ReadRootPactusServer_getNetworkInfo_Results(msg *capnp.Message) (PactusServer_getNetworkInfo_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getNetworkInfo_Results{root.Struct()}, err
}

func (s PactusServer_getNetworkInfo_Results) String() string {
	str, _ := text.Marshal(0xec6734738efb7faf, s.Struct)
	return str
}

func (s PactusServer_getNetworkInfo_Results) Result() (NetworkInfoResult, error) {
	p, err := s.Struct.Ptr(0)
	return NetworkInfoResult{Struct: p.Struct()}, err
}

func (s PactusServer_getNetworkInfo_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getNetworkInfo_Results) SetResult(v NetworkInfoResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated NetworkInfoResult struct, preferring placement in s's segment.
func (s PactusServer_getNetworkInfo_Results) NewResult() (NetworkInfoResult, error) {
	ss, err := NewNetworkInfoResult(s.Struct.Segment())
	if err != nil {
		return NetworkInfoResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_getNetworkInfo_Results_List is a list of PactusServer_getNetworkInfo_Results.
type PactusServer_getNetworkInfo_Results_List struct{ capnp.List }

// NewPactusServer_getNetworkInfo_Results creates a new list of PactusServer_getNetworkInfo_Results.
func NewPactusServer_getNetworkInfo_Results_List(s *capnp.Segment, sz int32) (PactusServer_getNetworkInfo_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getNetworkInfo_Results_List{l}, err
}

func (s PactusServer_getNetworkInfo_Results_List) At(i int) PactusServer_getNetworkInfo_Results {
	return PactusServer_getNetworkInfo_Results{s.List.Struct(i)}
}

func (s PactusServer_getNetworkInfo_Results_List) Set(i int, v PactusServer_getNetworkInfo_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getNetworkInfo_Results_List) String() string {
	str, _ := text.MarshalList(0xec6734738efb7faf, s.List)
	return str
}

// PactusServer_getNetworkInfo_Results_Promise is a wrapper for a PactusServer_getNetworkInfo_Results promised by a client call.
type PactusServer_getNetworkInfo_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getNetworkInfo_Results_Promise) Struct() (PactusServer_getNetworkInfo_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getNetworkInfo_Results{s}, err
}

func (p PactusServer_getNetworkInfo_Results_Promise) Result() NetworkInfoResult_Promise {
	return NetworkInfoResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PactusServer_getConsensusInfo_Params struct{ capnp.Struct }

// PactusServer_getConsensusInfo_Params_TypeID is the unique identifier for the type PactusServer_getConsensusInfo_Params.
const PactusServer_getConsensusInfo_Params_TypeID = 0x95a22d24c4235b55

func NewPactusServer_getConsensusInfo_Params(s *capnp.Segment) (PactusServer_getConsensusInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PactusServer_getConsensusInfo_Params{st}, err
}

func NewRootPactusServer_getConsensusInfo_Params(s *capnp.Segment) (PactusServer_getConsensusInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PactusServer_getConsensusInfo_Params{st}, err
}

func ReadRootPactusServer_getConsensusInfo_Params(msg *capnp.Message) (PactusServer_getConsensusInfo_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_getConsensusInfo_Params{root.Struct()}, err
}

func (s PactusServer_getConsensusInfo_Params) String() string {
	str, _ := text.Marshal(0x95a22d24c4235b55, s.Struct)
	return str
}

// PactusServer_getConsensusInfo_Params_List is a list of PactusServer_getConsensusInfo_Params.
type PactusServer_getConsensusInfo_Params_List struct{ capnp.List }

// NewPactusServer_getConsensusInfo_Params creates a new list of PactusServer_getConsensusInfo_Params.
func NewPactusServer_getConsensusInfo_Params_List(s *capnp.Segment, sz int32) (PactusServer_getConsensusInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return PactusServer_getConsensusInfo_Params_List{l}, err
}

func (s PactusServer_getConsensusInfo_Params_List) At(i int) PactusServer_getConsensusInfo_Params {
	return PactusServer_getConsensusInfo_Params{s.List.Struct(i)}
}

func (s PactusServer_getConsensusInfo_Params_List) Set(i int, v PactusServer_getConsensusInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getConsensusInfo_Params_List) String() string {
	str, _ := text.MarshalList(0x95a22d24c4235b55, s.List)
	return str
}

// PactusServer_getConsensusInfo_Params_Promise is a wrapper for a PactusServer_getConsensusInfo_Params promised by a client call.
type PactusServer_getConsensusInfo_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getConsensusInfo_Params_Promise) Struct() (PactusServer_getConsensusInfo_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getConsensusInfo_Params{s}, err
}

type PactusServer_getConsensusInfo_Results struct{ capnp.Struct }

// PactusServer_getConsensusInfo_Results_TypeID is the unique identifier for the type PactusServer_getConsensusInfo_Results.
const PactusServer_getConsensusInfo_Results_TypeID = 0x81a2a8ca5653a23a

func NewPactusServer_getConsensusInfo_Results(s *capnp.Segment) (PactusServer_getConsensusInfo_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getConsensusInfo_Results{st}, err
}

func NewRootPactusServer_getConsensusInfo_Results(s *capnp.Segment) (PactusServer_getConsensusInfo_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_getConsensusInfo_Results{st}, err
}

func ReadRootPactusServer_getConsensusInfo_Results(msg *capnp.Message) (PactusServer_getConsensusInfo_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_getConsensusInfo_Results{root.Struct()}, err
}

func (s PactusServer_getConsensusInfo_Results) String() string {
	str, _ := text.Marshal(0x81a2a8ca5653a23a, s.Struct)
	return str
}

func (s PactusServer_getConsensusInfo_Results) Result() (ConsensusInfoResult, error) {
	p, err := s.Struct.Ptr(0)
	return ConsensusInfoResult{Struct: p.Struct()}, err
}

func (s PactusServer_getConsensusInfo_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_getConsensusInfo_Results) SetResult(v ConsensusInfoResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated ConsensusInfoResult struct, preferring placement in s's segment.
func (s PactusServer_getConsensusInfo_Results) NewResult() (ConsensusInfoResult, error) {
	ss, err := NewConsensusInfoResult(s.Struct.Segment())
	if err != nil {
		return ConsensusInfoResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_getConsensusInfo_Results_List is a list of PactusServer_getConsensusInfo_Results.
type PactusServer_getConsensusInfo_Results_List struct{ capnp.List }

// NewPactusServer_getConsensusInfo_Results creates a new list of PactusServer_getConsensusInfo_Results.
func NewPactusServer_getConsensusInfo_Results_List(s *capnp.Segment, sz int32) (PactusServer_getConsensusInfo_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_getConsensusInfo_Results_List{l}, err
}

func (s PactusServer_getConsensusInfo_Results_List) At(i int) PactusServer_getConsensusInfo_Results {
	return PactusServer_getConsensusInfo_Results{s.List.Struct(i)}
}

func (s PactusServer_getConsensusInfo_Results_List) Set(i int, v PactusServer_getConsensusInfo_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_getConsensusInfo_Results_List) String() string {
	str, _ := text.MarshalList(0x81a2a8ca5653a23a, s.List)
	return str
}

// PactusServer_getConsensusInfo_Results_Promise is a wrapper for a PactusServer_getConsensusInfo_Results promised by a client call.
type PactusServer_getConsensusInfo_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_getConsensusInfo_Results_Promise) Struct() (PactusServer_getConsensusInfo_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_getConsensusInfo_Results{s}, err
}

func (p PactusServer_getConsensusInfo_Results_Promise) Result() ConsensusInfoResult_Promise {
	return ConsensusInfoResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PactusServer_sendRawTransaction_Params struct{ capnp.Struct }

// PactusServer_sendRawTransaction_Params_TypeID is the unique identifier for the type PactusServer_sendRawTransaction_Params.
const PactusServer_sendRawTransaction_Params_TypeID = 0x99b9577a242c4526

func NewPactusServer_sendRawTransaction_Params(s *capnp.Segment) (PactusServer_sendRawTransaction_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_sendRawTransaction_Params{st}, err
}

func NewRootPactusServer_sendRawTransaction_Params(s *capnp.Segment) (PactusServer_sendRawTransaction_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_sendRawTransaction_Params{st}, err
}

func ReadRootPactusServer_sendRawTransaction_Params(msg *capnp.Message) (PactusServer_sendRawTransaction_Params, error) {
	root, err := msg.RootPtr()
	return PactusServer_sendRawTransaction_Params{root.Struct()}, err
}

func (s PactusServer_sendRawTransaction_Params) String() string {
	str, _ := text.Marshal(0x99b9577a242c4526, s.Struct)
	return str
}

func (s PactusServer_sendRawTransaction_Params) RawTx() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s PactusServer_sendRawTransaction_Params) HasRawTx() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_sendRawTransaction_Params) SetRawTx(v []byte) error {
	return s.Struct.SetData(0, v)
}

// PactusServer_sendRawTransaction_Params_List is a list of PactusServer_sendRawTransaction_Params.
type PactusServer_sendRawTransaction_Params_List struct{ capnp.List }

// NewPactusServer_sendRawTransaction_Params creates a new list of PactusServer_sendRawTransaction_Params.
func NewPactusServer_sendRawTransaction_Params_List(s *capnp.Segment, sz int32) (PactusServer_sendRawTransaction_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_sendRawTransaction_Params_List{l}, err
}

func (s PactusServer_sendRawTransaction_Params_List) At(i int) PactusServer_sendRawTransaction_Params {
	return PactusServer_sendRawTransaction_Params{s.List.Struct(i)}
}

func (s PactusServer_sendRawTransaction_Params_List) Set(i int, v PactusServer_sendRawTransaction_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_sendRawTransaction_Params_List) String() string {
	str, _ := text.MarshalList(0x99b9577a242c4526, s.List)
	return str
}

// PactusServer_sendRawTransaction_Params_Promise is a wrapper for a PactusServer_sendRawTransaction_Params promised by a client call.
type PactusServer_sendRawTransaction_Params_Promise struct{ *capnp.Pipeline }

func (p PactusServer_sendRawTransaction_Params_Promise) Struct() (PactusServer_sendRawTransaction_Params, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_sendRawTransaction_Params{s}, err
}

type PactusServer_sendRawTransaction_Results struct{ capnp.Struct }

// PactusServer_sendRawTransaction_Results_TypeID is the unique identifier for the type PactusServer_sendRawTransaction_Results.
const PactusServer_sendRawTransaction_Results_TypeID = 0xf39aecb8c0a14f09

func NewPactusServer_sendRawTransaction_Results(s *capnp.Segment) (PactusServer_sendRawTransaction_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_sendRawTransaction_Results{st}, err
}

func NewRootPactusServer_sendRawTransaction_Results(s *capnp.Segment) (PactusServer_sendRawTransaction_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PactusServer_sendRawTransaction_Results{st}, err
}

func ReadRootPactusServer_sendRawTransaction_Results(msg *capnp.Message) (PactusServer_sendRawTransaction_Results, error) {
	root, err := msg.RootPtr()
	return PactusServer_sendRawTransaction_Results{root.Struct()}, err
}

func (s PactusServer_sendRawTransaction_Results) String() string {
	str, _ := text.Marshal(0xf39aecb8c0a14f09, s.Struct)
	return str
}

func (s PactusServer_sendRawTransaction_Results) Result() (SendTransactionResult, error) {
	p, err := s.Struct.Ptr(0)
	return SendTransactionResult{Struct: p.Struct()}, err
}

func (s PactusServer_sendRawTransaction_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PactusServer_sendRawTransaction_Results) SetResult(v SendTransactionResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated SendTransactionResult struct, preferring placement in s's segment.
func (s PactusServer_sendRawTransaction_Results) NewResult() (SendTransactionResult, error) {
	ss, err := NewSendTransactionResult(s.Struct.Segment())
	if err != nil {
		return SendTransactionResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PactusServer_sendRawTransaction_Results_List is a list of PactusServer_sendRawTransaction_Results.
type PactusServer_sendRawTransaction_Results_List struct{ capnp.List }

// NewPactusServer_sendRawTransaction_Results creates a new list of PactusServer_sendRawTransaction_Results.
func NewPactusServer_sendRawTransaction_Results_List(s *capnp.Segment, sz int32) (PactusServer_sendRawTransaction_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PactusServer_sendRawTransaction_Results_List{l}, err
}

func (s PactusServer_sendRawTransaction_Results_List) At(i int) PactusServer_sendRawTransaction_Results {
	return PactusServer_sendRawTransaction_Results{s.List.Struct(i)}
}

func (s PactusServer_sendRawTransaction_Results_List) Set(i int, v PactusServer_sendRawTransaction_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PactusServer_sendRawTransaction_Results_List) String() string {
	str, _ := text.MarshalList(0xf39aecb8c0a14f09, s.List)
	return str
}

// PactusServer_sendRawTransaction_Results_Promise is a wrapper for a PactusServer_sendRawTransaction_Results promised by a client call.
type PactusServer_sendRawTransaction_Results_Promise struct{ *capnp.Pipeline }

func (p PactusServer_sendRawTransaction_Results_Promise) Struct() (PactusServer_sendRawTransaction_Results, error) {
	s, err := p.Pipeline.Struct()
	return PactusServer_sendRawTransaction_Results{s}, err
}

func (p PactusServer_sendRawTransaction_Results_Promise) Result() SendTransactionResult_Promise {
	return SendTransactionResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

const schema_84b56bd0975dfd33 = "x\xda\xb4X{\x90\x1cU\xf5>\xe7\xf6\xcc\xf4\xbeg" +
	"\x9a\x9e\xa9\xfc\x92\x1f\xd4\x18\\0I%!\xbbIJ" +
	"\x12\xc5\x09y@6\xb22\xbd\x93\xf0\x88\xc4J\xef\xce" +
	"\xcd\xee\x90\xd9\xe9\xb1\xbbg7\x89P\x91\xa0\xc5C\xa0" +
	"@L\x11(W\x93 T\x16%\x08\x12\xccZ\xa6T" +
	"\xe4!(\x85PV!\x0a(\xa1\"\x0f\xa1\xca@\x81" +
	"\x80\x05c\x9d;\xd3\xdd7\x93Iv6U\xfe\xd9\xa7" +
	"\xbf\xbe\xe7\xdcs\xce\xfd\xce\xd7w\xc1\x85\xea2\xd6\x15" +
	"\x8e\xb6\x01\x187\x85#\xe5\xa5{3\x97<\xbdo\xef" +
	"5\xa0u\"@\x18U\x80\x85\xef\x84\xdfB@\x1d#" +
	")\xc0\xf2\x1b\x1f\xddty$\x15\xbf\x16\x8ci\x88\xe5" +
	"\x85\x9fl\xb8\xe3\x8f\x9b\x0f|\x0b\xc2\x0a!gFf" +
	"\xa0\xde\x15Q\x01\xf4y\x91\xd7\x01\xcb+Z\x17\xad\xfb" +
	"\xc3\x0b\xf3\xaf\x93\x97C\xf5/\xb4\\B\xa5\xe5\xbe\xf1" +
	"i\xfc\xcfN\xfb\xc4\xf5`t\xa2\x8fX\xac>O\x88" +
	"\x1eu\x14\xb0\xfc\xaf\xfbvm?\xf0\xd2+\xb7\xd4:" +
	"\x0c\x91\x97q\xf5]\xfd\x80J\xdf<\xa8^\x8a\x80\xe5" +
	"\xf1\xb3\x0f\x9f\xbek\xc3k\xb7\x836M\x09\xc0\x80\x0b" +
	"\xdb\x9b\xcfD\xfd\x8cf\x82No\xbe\x8e\xe9/\xb7\xa8" +
	"\x00\xe5u_\xfd\xecc\x9d\xf3\xf6\xee\xac\xc4GK." +
	"|\xbc\xe50B\xa8\xfc\xfb\xa7\x0e\xed\xd9\xff\\\xf1\x0e" +
	"\xd0\xa6\xc9^\x19A&Z\xd6\xa0\xfe\x0c-\xa0?\xd5" +
	"B1\x9e\xbdjn\xe7\xb6K'\xee\x94\xb7\xb9\xb8\xf5" +
	"]\xb1\x89V\xda\xe6x\xff=\xd7\xfd\xe0\xa6\xbf\x8d\xc9" +
	"\x80\\\xeb\xd3\x04\xb8Z\x00~\x18\xee\xefyykb" +
	"\x8f\x0c\x18k\xbd\x8f\x00\xf7\x0b\xc0\xcf_\xdb\xff\xdb\x0f" +
	"\xff\x7f\xcb^\x19\xf0L\xab\xc8\xd3\xab\x020-\xdd\xf2" +
	"\xa5\x97z\x0f\xdd]\x13p%\xe5msP\xd7\xda(" +
	"\xe0\xf66\x02\xe72K^?\xe7M}\x9f\xb4\xefy" +
	"m\xcf\xd3\xbe\x1fL|0\xcb\xe2\xbf\x19\x97\xfd\xccl" +
	"{\x88\xfct\x89O\xcb7\xde\xfa\xb9\x9e[\xef\xfaq" +
	"m=(3\xba\xd1vX\xdf \xfc\\\xdeF\xf5\xbf" +
	"a\xf7\xaf\x9c\x0b\xff\xbdd\x7f=\xf0\xc2\xae\xf6~\xd4" +
	"W\xb5\x13\xfa\xfc\xf6\x07\x00\xcb\x8b\xff1xd\xba\xb9" +
	"\xf3a\xd9\xf7\x91v\x91\xa5\x8f\xda\xc9\xf7\x15\x8f\xfc\xf5" +
	"\xdaw\xdb\xc7\x0e\xd2r\xacv\x93\xd3;ZP\x9f\xdd" +
	"A\xcb\x9d\xd5A\xcb\xadl\xdbn}r\xfb{\x07k" +
	"2B\x9d\xaa\xbf\xd8\xf1\x96~D`_\x15\xd8\xa1G" +
	">\x8d\x9f\xfe\xf9\xd1Cu\xb0\x0bo\x8e\xaeA}O" +
	"\x94\xc0cQ\x02\xeb?\x1b_pa\xe2\xb6\xc7\xaaM" +
	"+\xd2\xb7$\xb6W\x94;F\xfd\xb0;<\xb2\xef\x8d" +
	"\x1dw?!od<\xf6\x0b\x02L\xc4h#\x99\xce" +
	"\xab\xae\x0f\xfd\xee\x0bO\xca\x80\x17c\x8f\x12\xe0M\x01" +
	"(k\xf7\xae\x9f\xf1\xa7\x7f>)\xbbh\xd6\x04`\xba" +
	"F\x805s\x9exh\"\xf4\xc2\xb3\xb5\x99\x15K-" +
	"\xd1\xaeD\xbdW\xa3\x88{4\x0a\xe8\xe8s\xf1\x9d\xf3" +
	"g\x1e}\xb9.\xfa\x1em=\xea\x13\x02}@\xa3\xfd" +
	"\xa5\xc2\x17\x97^\x7fv\xe2\x15B\x87j\x8f\xdc\x86\xd3" +
	"\x0e\xeb\xb9\xd3\xe8;~\x9a\xc5\x00\xcbc\xf7>\x9a}" +
	"6\xfb\xc1\xdf\xe5P\xdf\x8f\x8b3\xde\x9c\xa0P\xdf;" +
	"\xf0q\xd7\xfd\xdfO\xbe!ovvB\x9c\x8e\xf3\x04" +
	"\xe0\xee\xf2w\xf6\xdf\xbc\xe3\xf4\xb7\xeb\xb5\xee\x86\xc4R" +
	"\xd4\x87\x13\xe49'\xc0\x0fl\xff\xcf-\xce\xa2\xc1\xb7" +
	"\xe5\xd5nH\x08wc\x02\xd0|\xf1\x9e_\x1f|\xfb" +
	"\xae\xf7d\xc0\xa1\xc4\xc7\x04xN\x00n\xbf\xf7k=" +
	"3\xaf=\xf2\xa1\xd4\xfcG\x13oQ\xf3\xb7&6\xee" +
	"|\xe0\x82\x0b>\xaaKnG\x123P\x7f_Dr" +
	"4A\xcd=::z\xce\x80Y,D\x8a\xe7\x14\xcd" +
	"\x01\xb7\xe4\xcc\xa7\xa7\xe2\xd2\xb4x\xc8p{\x84\xdb\xf3" +
	"\x07\xb9\xbb\xc2*8\xbc\xe0\x94\x9c\x9e\xc2&\xab\xb3\x8f" +
	";\xd1R\xdeu\x8c\x90\x12\x02\x08!\x80\xd6\xbe\x14\xc0" +
	"hR\xd0\x883L\xd9\xdc)\xe5]\x8c\x055\x03\xc4" +
	"\x98\xe4N\xa9q\xb7<o\x0dl\xee\xe3NI\xc9\xbb" +
	"iD#\xe6\xafk\xd2\xbaW(h\x0c1D\x8cS" +
	"u4>\x07\xc0\xd8\xa8\xa0\x91g\xa81\x8c#\x03\xd0" +
	"r\xdd\x00FVA\xa3\xc8PSX\x1c\x15\x00m\x98" +
	"\x90C\x0a\x1a.\xc3\xd4\x10\xcf\x0d\x0e\xb9\xd8\x04\x0c\x9b" +
	"\x00\xa3C\xa63\x84\xed\xc0\xb0\x1d0\xd9O\x01`," +
	"8o\x95\x80\xa3Y\xd35=P\xc3\xc9Zk\x9b\x05" +
	"\xc7\x1cpsV\x81RU\xca+\x0d\xa4\xca?\xbd5" +
	"\xa9\x9a\x8a\xb3\xb4i\x9b\xc3\xe8\x18M\xbe\xaf\xd93\x00" +
	"\x8cN\x05\x8d\x05A\xfa\xe6\xf5\x01\x18s\x154\xcee" +
	"\xa8\xe4\xb2\xfe\xf6F\xb8\xddo99\x17p+\x86\x80" +
	"aH\x8a\x82\xd5D\xb1:\xc9\xcd,\xb7\xa9V\xff\xe7" +
	";\xbbs9\x80\xf1=\x05\x8d\xdd\x0c5\xcf\xdb\x18\x95" +
	"`\x97\x82\xc6\x8f\x18\"\xab\xd4j\x8f\x0d`\xecV\xd0" +
	"\xf8\x09\xd5\x0a+\xb5\x1a\xa7\xb0\xf6)h<\xccP\x0b" +
	"\xb18\x86\x00\xb4\x07\x09\xf9S\x05\x8d_2\xd4\xc2J" +
	"\x1c\xc3\x00\xda\xc4\x0e\x00\xe3\xa0\x82\xc6c\x0c\xb7\x8fp" +
	"\xdb\xc9Y\x05\x8c\x00\xc3\x08`\xd4\xcd\x0ds\xaf\xc6\xe5" +
	"\xa2\xcdG\xa8\xb7 \xb9y\xb5T\xee\xb2\xe3\x9a.\xef" +
	"\xb3,@7\xb0Y\xb6\x9bss\x16$\x0b\x19\xce\x83" +
	"\xb4\x14m\xabh9\xdc\xc6\xf3\xb3Y\x9b;\x0e`\x1b" +
	"0l;I7\xfb%RG*)\x9a\xa5\x84\x01|" +
	"\xcaEoP\xea]\xb8\x06\x98>\x1bU\x0c\xd8\x12\xbd" +
	"\x09\xa2\x9f\x81W\x02\xd3\x13\xa8\"\xf3G'zL\xa5" +
	"7\xe36`:\xa2\x8a\x8a\xaf@\xd0\xd3*\xda\xfb\xdb" +
	"\x80i\xef\xa8\x18\x0cC\xf4\x08]{u=0\xedE" +
	"\x15\xc3>\x85\xa37\xdb\xb5g\xae\x04\xa6=\xaeb\xc4" +
	"g\x18\xf4\xa8O\x9b\xf8.0\xed\x80\x8a\xaa?z\xd1" +
	"#2m\x9c\xfc\xedQ\xb1\xc9\x97#\xe8\xc90m\xe7" +
	"\x8d\xc0\xb4\xdbTl\xf65\x06z\xfc\xa6}\xfb.`" +
	"\xda5jy\x90\xbb\x82\x03\x00`\x19\x06OQ\xaa\x9a" +
	"lH\xad\x16\x87\xb8b\x12\xad\x0f\xa9J\xf3WL\xe7" +
	"\x0f\x0cX%P\x0aU\xc4%f>\x97\x85\xa8\xe9Z" +
	"\xb6\xb4\x0a\x0e\x0c\x99\xb9BOa\x13Z\x15\xebW\xb8" +
	";jA\xca\xdeL\xecV1\x09\xc2C\x8f\xf1DT" +
	"\x0e/d\xfb\xcc\xd1\xb5\xe8\x9d8\x85\xbc\xa6\xf1TY" +
	"4m\xda\xaa9\xec\xf8_\x87j\xbe\x16QUb\x12" +
	",\xe2\x02P3I\x87{ip\xb8\xfd\xf36\x8fx" +
	"p\x96\x82\xc6J\x86\xa9\"\xe7v\xcfJ\xafa\x93\xf4" +
	"\xe8`\x07`ZA\x8c\x053\x12\x90\x8c\x8dm\xc3\xcb" +
	"\x82L;I\xe2\x9dc(\xae;\xa0\xb8\xa4m\x8e\xae" +
	"\xdd2e\x12\x15\xa5\xa3\xc2U(\xd4u\x00&\xe5P" +
	"\x7f\x08\xd7phx\x12_\xa2+\x1a\x9fj\xfe\xff\xc3" +
	"\x14\xa9Z\xb8\xa94\xb0O\xd5\x92\xaf9\x81\xafc\x86" +
	"\xd3\x09yF4{\xc1\xed\xe3Q\x0a\x8cz\xe3\x04\xab" +
	"\x9d\xd2\x14\x93\xda\xcf\x8b\xb6\xe1\x84V#\xab\xd7\x19\xcb" +
	"\x83\xb8\xb6\x9b\x15F=\x8ePk\xa7\xcd%\xaa\xe5\xf2" +
	"\x1a]0\xa7\x8e.\xe8\xae\xa7\x0b\xfa\x02\x09\xe0\xcf\x9a" +
	"\xaf\x132\xaf\xa0\xb1\x85a\xd4\xddZ\xe4\xc8\x80!\x03" +
	"L\x8eX.\xb7\xfd\x80\x84,Xm:\x80\x81T\xb0" +
	"\xadR!\x8b\x0a0T\xa4\x90C\xf5\x14\x8d\xc73t" +
	"~\xd5j\x89\xda\xfc-\xac\xa21\xb6RA#\x1dl" +
	"\xa1\x97\xe6\xddE\x0a\x1a\x97I[XG[X\xab\xa0" +
	"\xb1\x91a9o:\xa2\x91\xb0\xdaI\xe0\x0f;\xefM" +
	"\xed\xb0\x1b\xb0\x86\x87s\xae\xcb\x019\xc6\x82\xff\x8fS" +
	"j^\xd3\x19j\xf8<N\xd6\xbe+\xaaq\xf1\x0a\xaf" +
	"I\x89Y\x1f$\xc6\xe7\xb5\xdemAf<\x1d\xb1n" +
	"}51E\x86e\xd7r\xcd|\xda\x1a\x05\x85\xdb\x18" +
	"\x06\x86ay\xef)\x9e\xb6F\xa5\x17#Uz\x01E" +
	"fD\x99@:N\xd2\x90\xcb\xa3\x94\x8d\x9a\xa8)\x05" +
	"\xcb\x144.\x92\xa2\xeeY\x03`\xacV\xd0XK\xf5" +
	"\xac\x86m\x9cY\xdd\xca\x90P\xa5$\xa40\x16\\\x12" +
	"T\x0bC\xdae\x05\xb7]\x00\xc0X \xeb+oU" +
	"w\x8b\x1f6\xe5\xb9\xe3$\xad(Q\xb5<G\xa4\xc8" +
	"g\xd4\x8b|\x8eT\x04/\xf2\xde\xfe\xa0\x08\x92t<" +
	"\x96`\xdc\xaa?PI\x97\xd5vAc\\\\\x9d\x8d" +
	"\x93\x0e;I\xca\xd6\xe8\xfb\x93\xca\xd9F\xf9\xab/U" +
	"\xe9\xf5IG\x82\x7fs1\xc5S\x15L9A\xb1\x0e" +
	"L\x95*\x1b?\xb6u\x1c\xc8[\xa9\xc9\xde\x89\x9a)" +
	"\xc3\x0b\xd9c\x1a\xca\x9f=\xf5K\xe5WjFU\x96" +
	",b\x98\"\xf9]r\xbc\xaa\xc8\xff 'r{\x8c" +
	"r\x92~\x14Ot\xfcX\xb5\x89\xbb%\x8a\xf5z\xb8" +
	"\xbbz$\xb3\xc7\xed\xfaXn\x17\xb3@\"\x07\xff\xd6" +
	"h\x12rH\xab\xbc\"\xfb\xe7z\xc1\xe9g\xe1R\x80" +
	"\xccgP\xc1\xcc\\\xf4\x93\xa2\xcf\xc6\xe5\x00\x99N2" +
	"/\xc0\x80\xf0\xf5y\xd8\x0d\x90\x99E\xf6E\x18\xfc\xce" +
	"\xea]b\x99\xb9d?\x97\xec!E\xfc%\xe9\x8b\xb1" +
	"\x0f \xb3\x88\xec\xcb\xc8\x1eF\xf1\xa3\xa4\x9f\x87k\x00" +
	"2_$\xfbj\xb2GX\x1c#\x00\xfa*\xb1\xfe2" +
	"\xb2_DvU\x89\xa3\xb8h\x11\xeb\xaf${\x9a\xec" +
	"M\xa186\x01\xe8\xbdx#@&M\xf6+\xc8\xde" +
	"\x1c\x8ec3\x80~9\xee\x00\xc8\\F\xf6,\xd9[" +
	"\"ql\x01\xd0M\xb4\x012\x1b\xc9\x9e\xc7\xe3\xea\xbd" +
	"}\xd8*\xe46\x07S6i\x0e\xf2\x82\xeb=\xd5h" +
	"\xd6r\xb1\xd4\x9f\xcf\x0d|\x99\xd31\xf6l4\xe92" +
	"\x9c\x17\x88\x1a\xab\x8b&7\xe5\xcdA\xdfEm7\xdb" +
	"|\x80\xe7Fx\x16{\xb9\xe3\x98\x83\xdc\x09>,\xe7" +
	"\x0ab\x16\xf4\xa2\xf7\xca\x7f\xe3}\x05\xc9\xe5[\xa9\x13" +
	"jYd*z\xaf\xc1{\x80\xda\xe3\xd7\x90\x0b_f" +
	"t\xf6\xf1dc|\xe5_jNr1\xe3\xf3S\xaa" +
	"2:\xfe\x97\"\xb3\xe1\xab\x12\xff^{*d[\xe7" +
	"\xbf\xa5av\xf7/*OE3\x05\xd5I\x9bQ[" +
	"\xfe\xe1;N\x10q\xdb\xcdm\xca\x0d\x98\xcaqj\xb7" +
	"\xbb\x8e\xda]_\xbd\xf0\xfa\xa6$\x15\xaf\xa6\x81x\x95" +
	"\x82\xc6.\xe9\x16lg_p/S#_}}$" +
	"\xc9\xa0PUO\x98\xfd\x0e/\x90<\xc3\xe3^9\xb9" +
	"\xc1\x82\xe9\x96l\x92\x94\xd5\x92\xff7\x00\x00\xff\xff\xc5" +
	"M\xb5^"

func init() {
	schemas.Register(schema_84b56bd0975dfd33,
		0x81a2a8ca5653a23a,
		0x83143f06598cf9e8,
		0x872ed7cc55340b43,
		0x88b90d73d814fe7b,
		0x8ededcb57f98aaf0,
		0x93e35d981ce226a9,
		0x95a22d24c4235b55,
		0x9770d1aea1bdc9cb,
		0x99b9577a242c4526,
		0x9ddf8c9e87a562a9,
		0xa11579dd4962059f,
		0xa2781bf8c3aee3b7,
		0xa3bd4ddc3e0a5017,
		0xa813e92fe7395369,
		0xa9c1656f28f615b1,
		0xab9a904927908aff,
		0xae39f74773bfa089,
		0xb4956119e567e635,
		0xb89d0df283dbb65c,
		0xb8f393fd6f7f0c44,
		0xbd77371c14feb668,
		0xc491154730a9b313,
		0xc6a382e8a87605a0,
		0xc73bc804887c2453,
		0xc7ebd41a5aa611ff,
		0xcfd704b9b2c62a4a,
		0xddf1212e9514d1f1,
		0xdeb9cfe7754f053f,
		0xe0f664cf64c2a69d,
		0xe81f9cad31fab5f3,
		0xec1c828dae8bffa3,
		0xec6734738efb7faf,
		0xf39aecb8c0a14f09,
		0xf8e58321495ea693,
		0xf94646af9560150b)
}
