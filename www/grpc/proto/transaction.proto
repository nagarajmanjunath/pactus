syntax = 'proto3';

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/pactus-project/pactus/www/grpc/pactus";

package pactus;

service Transaction {
  rpc GetTransaction(TransactionRequest) returns (TransactionResponse) {
    option (google.api.http).get =
        "/v1/transaction/id/{id}/verbosity/{verbosity}";
  }
  rpc SendRawTransaction(SendRawTransactionRequest)
      returns (SendRawTransactionResponse) {
    option (google.api.http).put =
        "/v1/transaction/send_raw_transaction/{data}";
  };
}

message TransactionRequest {
  bytes id = 1;
  TransactionVerbosity verbosity = 2;
}

message TransactionResponse {
  bytes block_hash = 1;
  uint32 block_time = 2;
  TransactionInfo transaction = 3;
}

message SendRawTransactionRequest { bytes data = 1; }

message SendRawTransactionResponse { bytes id = 2; }

message PayloadSend {
  string sender = 1;
  string receiver = 2;
  int64 amount = 3;
}

message PayloadBond {
  string sender = 1;
  string receiver = 2;
  int64 stake = 3;
}

message PayloadSortition {
  string address = 1;
  bytes proof = 2;
}

message TransactionInfo {
  bytes id = 1;
  bytes data = 2;
  int32 version = 3;
  bytes stamp = 4;
  int32 sequence = 5;
  int64 value = 6;
  int64 fee = 7;
  PayloadType Type = 8;
  oneof Payload {
    PayloadSend send = 30;
    PayloadBond bond = 31;
    PayloadSortition sortition = 32;
  };
  string memo = 9;
  string public_key = 10;
  bytes signature = 11;
  uint32 block_height = 12;
  uint32 block_time = 13;
}

enum PayloadType {
  UNKNOWN = 0;
  SEND_PAYLOAD = 1;
  BOND_PAYLOAD = 2;
  SORTITION_PAYLOAD = 3;
  UNBOND_PAYLOAD = 4;
  WITHDRAW_PAYLOAD = 5;
}

enum TransactionVerbosity {
  TRANSACTION_DATA = 0;
  TRANSACTION_INFO = 1;
}
