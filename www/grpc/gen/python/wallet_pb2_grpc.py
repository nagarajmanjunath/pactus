# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import wallet_pb2 as wallet__pb2


class WalletStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateMnemonic = channel.unary_unary(
                '/pactus.Wallet/GenerateMnemonic',
                request_serializer=wallet__pb2.GenerateMnemonicRequest.SerializeToString,
                response_deserializer=wallet__pb2.GenerateMnemonicResponse.FromString,
                )
        self.CreateWallet = channel.unary_unary(
                '/pactus.Wallet/CreateWallet',
                request_serializer=wallet__pb2.CreateWalletRequest.SerializeToString,
                response_deserializer=wallet__pb2.CreateWalletResponse.FromString,
                )


class WalletServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateMnemonic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateMnemonic': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateMnemonic,
                    request_deserializer=wallet__pb2.GenerateMnemonicRequest.FromString,
                    response_serializer=wallet__pb2.GenerateMnemonicResponse.SerializeToString,
            ),
            'CreateWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWallet,
                    request_deserializer=wallet__pb2.CreateWalletRequest.FromString,
                    response_serializer=wallet__pb2.CreateWalletResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pactus.Wallet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Wallet(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateMnemonic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Wallet/GenerateMnemonic',
            wallet__pb2.GenerateMnemonicRequest.SerializeToString,
            wallet__pb2.GenerateMnemonicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Wallet/CreateWallet',
            wallet__pb2.CreateWalletRequest.SerializeToString,
            wallet__pb2.CreateWalletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
