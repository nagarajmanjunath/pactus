# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import blockchain_pb2 as blockchain__pb2


class BlockchainStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBlock = channel.unary_unary(
                '/pactus.Blockchain/GetBlock',
                request_serializer=blockchain__pb2.BlockRequest.SerializeToString,
                response_deserializer=blockchain__pb2.BlockResponse.FromString,
                )
        self.GetBlockHash = channel.unary_unary(
                '/pactus.Blockchain/GetBlockHash',
                request_serializer=blockchain__pb2.BlockHashRequest.SerializeToString,
                response_deserializer=blockchain__pb2.BlockHashResponse.FromString,
                )
        self.GetBlockHeight = channel.unary_unary(
                '/pactus.Blockchain/GetBlockHeight',
                request_serializer=blockchain__pb2.BlockHeightRequest.SerializeToString,
                response_deserializer=blockchain__pb2.BlockHeightResponse.FromString,
                )
        self.GetAccount = channel.unary_unary(
                '/pactus.Blockchain/GetAccount',
                request_serializer=blockchain__pb2.AccountRequest.SerializeToString,
                response_deserializer=blockchain__pb2.AccountResponse.FromString,
                )
        self.GetValidators = channel.unary_unary(
                '/pactus.Blockchain/GetValidators',
                request_serializer=blockchain__pb2.ValidatorsRequest.SerializeToString,
                response_deserializer=blockchain__pb2.ValidatorsResponse.FromString,
                )
        self.GetValidator = channel.unary_unary(
                '/pactus.Blockchain/GetValidator',
                request_serializer=blockchain__pb2.ValidatorRequest.SerializeToString,
                response_deserializer=blockchain__pb2.ValidatorResponse.FromString,
                )
        self.GetValidatorByNumber = channel.unary_unary(
                '/pactus.Blockchain/GetValidatorByNumber',
                request_serializer=blockchain__pb2.ValidatorByNumberRequest.SerializeToString,
                response_deserializer=blockchain__pb2.ValidatorResponse.FromString,
                )
        self.GetBlockchainInfo = channel.unary_unary(
                '/pactus.Blockchain/GetBlockchainInfo',
                request_serializer=blockchain__pb2.BlockchainInfoRequest.SerializeToString,
                response_deserializer=blockchain__pb2.BlockchainInfoResponse.FromString,
                )


class BlockchainServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockHeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValidators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValidator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValidatorByNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockchainInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlockchainServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlock,
                    request_deserializer=blockchain__pb2.BlockRequest.FromString,
                    response_serializer=blockchain__pb2.BlockResponse.SerializeToString,
            ),
            'GetBlockHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockHash,
                    request_deserializer=blockchain__pb2.BlockHashRequest.FromString,
                    response_serializer=blockchain__pb2.BlockHashResponse.SerializeToString,
            ),
            'GetBlockHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockHeight,
                    request_deserializer=blockchain__pb2.BlockHeightRequest.FromString,
                    response_serializer=blockchain__pb2.BlockHeightResponse.SerializeToString,
            ),
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=blockchain__pb2.AccountRequest.FromString,
                    response_serializer=blockchain__pb2.AccountResponse.SerializeToString,
            ),
            'GetValidators': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValidators,
                    request_deserializer=blockchain__pb2.ValidatorsRequest.FromString,
                    response_serializer=blockchain__pb2.ValidatorsResponse.SerializeToString,
            ),
            'GetValidator': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValidator,
                    request_deserializer=blockchain__pb2.ValidatorRequest.FromString,
                    response_serializer=blockchain__pb2.ValidatorResponse.SerializeToString,
            ),
            'GetValidatorByNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValidatorByNumber,
                    request_deserializer=blockchain__pb2.ValidatorByNumberRequest.FromString,
                    response_serializer=blockchain__pb2.ValidatorResponse.SerializeToString,
            ),
            'GetBlockchainInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockchainInfo,
                    request_deserializer=blockchain__pb2.BlockchainInfoRequest.FromString,
                    response_serializer=blockchain__pb2.BlockchainInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pactus.Blockchain', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Blockchain(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetBlock',
            blockchain__pb2.BlockRequest.SerializeToString,
            blockchain__pb2.BlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetBlockHash',
            blockchain__pb2.BlockHashRequest.SerializeToString,
            blockchain__pb2.BlockHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetBlockHeight',
            blockchain__pb2.BlockHeightRequest.SerializeToString,
            blockchain__pb2.BlockHeightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetAccount',
            blockchain__pb2.AccountRequest.SerializeToString,
            blockchain__pb2.AccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetValidators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetValidators',
            blockchain__pb2.ValidatorsRequest.SerializeToString,
            blockchain__pb2.ValidatorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetValidator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetValidator',
            blockchain__pb2.ValidatorRequest.SerializeToString,
            blockchain__pb2.ValidatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetValidatorByNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetValidatorByNumber',
            blockchain__pb2.ValidatorByNumberRequest.SerializeToString,
            blockchain__pb2.ValidatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockchainInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pactus.Blockchain/GetBlockchainInfo',
            blockchain__pb2.BlockchainInfoRequest.SerializeToString,
            blockchain__pb2.BlockchainInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
